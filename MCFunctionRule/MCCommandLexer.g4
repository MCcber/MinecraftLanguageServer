lexer grammar MCCommandLexer;
options {
    language = Java;
}

WS : [ \t\r\n\u000C\u00A0\p{Mn}\p{Mc}\p{Zs}] -> skip;
Sharp:'#';
Slash:'/';
AtChar:'@';
AtLetter:'at';
ExclamationMark:'!';
Comma:',';
Dot:'.';
Colon:':';
DoubleDot:'..';
SquareBrackets:'[]';
LeftSquareBracket:'[';
RightSquareBracket:']';

RoundBrackets:'()';
LeftRoundBracket:'(';
RightRoundBracket:')';

CurlyBrackets:'{}';
LeftCurlyBracket:'{';
RightCurlyBracket:'}';

AngleBrackets:'<>';
LeftAngleBracket:'<';
RightAngleBracket:'>';

DoubleQuotes:'"';
Quote:'\'';

ByteKey:'byte';
IntKey:'int';
LongKey:'long';
StringKey:'string';
BooleanKey:'boolean';
ShortKey:'short';
FloatKey:'float';
DoubleKey:'double';
BooleanValue:'true'|'false'|'1b'|'0b';
SelectorName: [paresn];
AxeKey: 'x'|'y'|'z';
AxeLengthKey:'dx'|'dy'|'dz';
Axes:[xyz][xyz]?[xyz]?;
ViewRotationKey:  ('x_rotation'|'y_rotation') ;
Level: 'level';
LimitKey: 'limit';
NBTKey: 'nbt';
ScoreKey:'scores';
TypeKey:'type';
SortKey:'sort';

AdvancementKey:'advancements';
AttributeKey:'attribute';
BossbarKey:'bossbar';
ClearKey:'clear';
CloneKey:'clone';
DamageKey:'damage';
DataKey:'data';
DatapackKey:'datapack';
DebugKey:'debug';
DefaultgamemodeKey:'defaultgamemode';
DifficultyKey:'difficulty';
EffectKey:'effect';
EnchantKey:'enchant';
ExecuteKey:'execute';
ExperienceKey:'experience';
FillKey:'fill';
FillbiomeKey:'fillbiome';
ForceloadKey:'forceload';
FunctionKey:'function';
GamemodeKey:'gamemode';
GameruleKey:'gamerule';
GiveKey:'give';
HelpKey:'help';
ItemKey:'item';
JfrKey:'jfr';
KickKey:'kick';
KillKey:'kill';
ListKey:'list';
LocateKey:'locate';
LootKey:'loot';
MeKey:'me';
MsgKey:'msg';
ParticleKey:'particle';
PlaceKey:'place';
PlaysoundKey:'playsound';
PublishKey:'publish';
RecipeKey:'recipe';
ReloadKey:'reload';
ReturnKey:'return';
RideKey:'ride';
SayKey:'say';
ScheduleKey:'schedule';
ScoreboardKey:'scoreboard';
SeedKey:'seed';
SetblockKey:'setblock';
SetworldspawnKey:'setworldspawn';
SpawnpointKey:'spawnpoint';
SpectateKey:'spectate';
SpreadplayersKey:'spreadplayers';
StopsoundKey:'stopsound';
SummonKey:'summon';
TagKey:'tag';
TeamKey:'team';
TeammsgKey:'teammsg';
TeleportKey:'teleport';
TellKey:'tell';
TellrawKey:'tellraw';
TimeKey:'time';
TitleKey:'title';
TmKey:'tm';
TpKey:'tp';
TriggerKey:'trigger';
WeatherKey:'weather';
WorldborderKey:'worldborder';
XpKey:'xp';

Star:'*';
Add:'add';
Remove:'remove';
Value:'value';
Set:'set';
Multiply:'multiply';
Multiply_Base:'multiply_base';
Max:'max';
Players:'players';
Visible:'visible';
Color:'color';
Name:'name';
Style:'style';
Filtered:'filtered';
Masked:'masked';
Replace:'replace';
Force:'force';
Move:'move';
Normal:'normal';
To:'to';
By:'by';
Merge:'merge';
Modify:'modify';
Block:'block';
Entity:'entity';
Storage:'storage';
As:'as';
Grant:'grant';
Revoke:'revoke';
Everything:'everything';
Only:'only';
From:'from';
Through:'through';
Until:'until';
Base:'base';
Get:'get';
Modifier:'modifier';
Available:'available';
Enable:'enable';
After:'after';
Before:'before';
First:'first';
Last:'last';
Disable:'disable';
Start:'start';
Stop:'stop';
Infinite:'infinite';
Easy:'easy';
Hard:'hard';
Peaceful:'peaceful';
Eyes:'eyes';
Feet:'feet';
All:'all';
Biome:'biome';
Blocks:'blocks';
Dimension:'dimension';
Loaded:'loaded';
Predicate:'predicate';
Score:'score';
Matches:'matches';
Attacker:'attacker';
Controller:'controller';
Leasher:'leasher';
Origin:'origin';
Owner:'owner';
Passengers:'passengers';
Target:'target';
Vehicle:'vehicle';
Motion_blocking:'motion_blocking';
Motion_blocking_no_leaves:'motion_blocking_no_leaves';
Ocean_floor:'ocean_floor';
World_surface:'world_surface';
Over:'over';
Result:'result';
Success:'success';
Align:'align';
Anchored:'anchored';
If:'if';
Unless:'unless';
In:'in';
On:'on';
Positioned:'positioned';
Rotated:'rotated';
Run:'run';
Store:'store';
Query:'query';
Levels:'levels';
Points:'points';
Destroy:'destroy';
Hollow:'hollow';
Keep:'keep';
Outline:'outline';
Uuids:'uuids';
Poi:'poi';
Structure:'structure';
Insert:'insert';
Spawn:'spawn';
Fish:'fish';
Mine:'mine';
Feature:'feature';
Jigsaw:'jigsaw';
Template:'template';
Front_back:'front_back';
Left_right:'left_right';
None:'none';
Clockwise_90:'clockwise_90';
Counterclockwise_90:'counterclockwise_90';
Ambient:'ambient';
Hostile:'hostile';
Master:'master';
Music:'music';
Neutral:'neutral';
Player:'player';
Record:'record';
Voice:'voice';
Append:'append';
Dismount:'dismount';
Mount:'mount';
Objectives:'objectives';
Hearts:'hearts';
DisplayName:'displayname';
Rendertype:'rendertype';
Setdisplay:'setdisplay';
Operation:'operation';
Reset:'reset';
Under:'under';
Actionbar:'actionbar';
Subtitle:'subtitle';
Times:'times';
FadeIn:'fadeIn';
Stay:'stay';
FadeOut:'fadeOut';
Center:'center';
Warning:'warning';
Amount:'amount';
Buffer:'buffer';
Facing:'facing';
Prepend:'prepend';
Bossbar:'bossBar';
With:'with';
Mainhand:'mainhand';
Offhand:'offhand';
Take:'take';
Always:'always';
Never:'never';
PushOtherTeams:'pushOtherTeams';
PushOwnTeam:'pushOwnTeam';
HideForOtherTeams:'hideForOtherTeams';
HideForOwnTeam:'hideForOwnTeam';
FriendlyFire:'friendlyFire';
NametagVisibility:'nametagVisibility';
SeeFriendlyInvisibles:'seeFriendlyInvisibles';
Rain:'rain';
Thunder:'thunder';
Day:'day';
Midnight:'midnight';
Night:'night';
Daytime:'daytime';
Noon:'noon';
Gametime:'gametime';
Distance:'distance';
Empty:'empty';
Join:'join';
Leave:'leave';
CollisionRule:'collisionRule';
DeathMessageVisibility:'deathMessageVisibility';
Prefix:'prefix';
Suffix:'suffix';
LessThanOrEqualTo:'<=';
Equal:'=';
GreaterThanOrEqualTo:'>=';
OneHundredAndEighty:'180';
GreaterThanLessThan:'><';
DivisionEqual:'/=';
MultiplicationEqual:'*=';
AdditionEqual:'+=';
SubtractionEqual:'-=';
RemainderEqual:'%=';

fragment HexDigit: [0-9a-fA-F];

fragment UnicodeEscape: 'u' HexDigit HexDigit HexDigit HexDigit;

fragment EscapeChar: '\\' (["\\bfnrt] | UnicodeEscape);

UUID:[0-9]+'-'[0-9]+'-'[0-9]+'-'[0-9]+'-'[0-9]+;
fragment FloatExponent:[eE]([-+])?[0-9]+;
Integer:([-+])?[0-9]+;
IntInterval:(Integer DoubleDot)|( DoubleDot Integer)|(Integer DoubleDot Integer);
PositiveDouble:([0-9]+('.'[0-9]+)?)|([0-9]+?('.'[0-9]+));
PositiveDoubleInterval:(PositiveDouble DoubleDot)|( DoubleDot PositiveDouble)|(PositiveDouble DoubleDot PositiveDouble);
Double:(([-+])?[0-9]+)|(([-+])?[0-9]*Dot[0-9]+);
DoubleInterval:(Double DoubleDot)|( DoubleDot Double)|(Double DoubleDot Double);
Float:(([-+])?[0-9]+FloatExponent?)|(([-+])?[0-9]*Dot[0-9]+FloatExponent);
GameTimeValue:([0-9]+('.'[0-9]+)?)[dst]?;
IntTypedUnit:[bBsSlL];
FloatTypedUnit:[dDfF];

Position: ((('~'|'^') (Double|Integer)?) | (Double|Integer)) -> pushMode(Coordinate_Mode),type(Coordinate);

fragment IdentStart:[\p{L}\p{Nl}_%.];
fragment IdentContinue:IdentStart|[\u200C\u200D]|[\p{Mn}\p{Mc}\p{Nd}\p{Pc}];
Identifier:IdentStart IdentContinue*;

fragment OriginResource:Sharp? (Identifier Colon)? Identifier;

FileReference:[a-z-_]+(Slash([a-z0-9\-_]+))*;

fragment SingleStringValue:~[\p{Cc}]|EscapeChar;
fragment StringValue:[_a-zA-Z0-9-+.]|EscapeChar;
String: '"' SingleStringValue* '"';
// UnquotedKey: StringValue(StringValue)*;

ScoreboardObjective:[a-zA-Z0-9-_+.]+;

ResourceLocation:OriginResource;

BlockStateKey:Identifier;
BlockStateValue:([a-z0-9_])+|BooleanValue;

MessageContent:[ ] -> pushMode(Message_Mode);

mode Message_Mode;
Message:~[\r\n]+;
MESSAGE_END: EOF -> popMode;

mode Coordinate_Mode;
Coordinate:((('~'|'^') (Double|Integer)?) | (Double|Integer));
COORDINATE_END: [ ] -> skip,popMode;
