//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:/C#Project/MCFunctionSyntaxCompletionServer/Grammar/commonNBTTrees.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class commonNBTTreesParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		T__73=74, T__74=75, T__75=76, T__76=77, T__77=78, T__78=79, T__79=80, 
		T__80=81, T__81=82, T__82=83, T__83=84, T__84=85, T__85=86, T__86=87, 
		T__87=88, T__88=89, T__89=90, T__90=91, T__91=92, T__92=93, T__93=94, 
		T__94=95, T__95=96, T__96=97, T__97=98, T__98=99, T__99=100, T__100=101, 
		T__101=102, T__102=103, T__103=104, T__104=105, T__105=106, T__106=107, 
		T__107=108, T__108=109, T__109=110, T__110=111, T__111=112, T__112=113, 
		T__113=114, T__114=115, T__115=116, T__116=117, T__117=118, T__118=119, 
		T__119=120, T__120=121, T__121=122, T__122=123, T__123=124, T__124=125, 
		T__125=126, T__126=127, T__127=128, T__128=129, T__129=130, T__130=131, 
		T__131=132, T__132=133, T__133=134, T__134=135, T__135=136, T__136=137, 
		Bool=138, Byte=139, Int=140, Decimal=141, IdString=142, Any=143, Key=144, 
		Value=145;
	public const int
		RULE_content = 0, RULE_trees = 1, RULE_itemCommonTags = 2, RULE_count = 3, 
		RULE_id = 4, RULE_slot = 5, RULE_tag = 6, RULE_attributeModifiers = 7, 
		RULE_attributeModifier = 8, RULE_amount = 9, RULE_attributeName = 10, 
		RULE_name = 11, RULE_operation = 12, RULE_attributeSlot = 13, RULE_uuid = 14, 
		RULE_canDestroy = 15, RULE_customCreativeLock = 16, RULE_customModelData = 17, 
		RULE_damage = 18, RULE_display = 19, RULE_color = 20, RULE_lore = 21, 
		RULE_jsonText = 22, RULE_enchantments = 23, RULE_enchantment = 24, RULE_lvl = 25, 
		RULE_hideFlags = 26, RULE_repairCost = 27, RULE_trim = 28, RULE_material = 29, 
		RULE_pattern = 30, RULE_unbreakable = 31, RULE_angryCreatureExtraField = 32, 
		RULE_angerTime = 33, RULE_angryAt = 34, RULE_cannotEnterHiveTicks = 35, 
		RULE_cropsGrownSincePollination = 36, RULE_flowerPos = 37, RULE_hasNectar = 38, 
		RULE_hasStung = 39, RULE_hivePos = 40, RULE_ticksSincePollination = 41, 
		RULE_arrowProjectileCommonTags = 42, RULE_crit = 43, RULE_shotFromCrossbow = 44, 
		RULE_soundEvent = 45, RULE_inGround = 46, RULE_pickup = 47, RULE_pierceLevel = 48, 
		RULE_shake = 49, RULE_life = 50, RULE_arrowDamage = 51, RULE_inBlockState = 52, 
		RULE_blockStateName = 53, RULE_blockStateProperties = 54, RULE_propertiesKeyValuePair = 55, 
		RULE_propertiesKey = 56, RULE_propertiesValue = 57, RULE_breedableMobExtraFields = 58, 
		RULE_age = 59, RULE_forcedAge = 60, RULE_inLove = 61, RULE_loveCause = 62, 
		RULE_commonTagsForMobsSpawnedInRaids = 63, RULE_canJoinRaid = 64, RULE_patrolLeader = 65, 
		RULE_patrolling = 66, RULE_patrolTarget = 67, RULE_raidId = 68, RULE_wave = 69, 
		RULE_commonTagsForRideableEntities = 70, RULE_bred = 71, RULE_eatingHaystack = 72, 
		RULE_owner = 73, RULE_tame = 74, RULE_temper = 75, RULE_commonTagsForZombies = 76, 
		RULE_canBreakDoors = 77, RULE_drownedConversionTime = 78, RULE_inWaterTime = 79, 
		RULE_isBaby = 80, RULE_containerEntityCommonTags = 81, RULE_lootTable = 82, 
		RULE_lootTableSeed = 83, RULE_containerItems = 84, RULE_entityCommonTags = 85, 
		RULE_air = 86, RULE_customName = 87, RULE_customNameVisible = 88, RULE_fallDistance = 89, 
		RULE_fire = 90, RULE_glowing = 91, RULE_hasVisualFire = 92, RULE_invulnerable = 93, 
		RULE_motion = 94, RULE_noGravity = 95, RULE_portalCooldown = 96, RULE_rotation = 97, 
		RULE_silent = 98, RULE_tags = 99, RULE_ticksFrozen = 100, RULE_passengers = 101, 
		RULE_entityData = 102, RULE_fireballProjectileCommonTags = 103, RULE_power = 104, 
		RULE_itemProjectileCommonTags = 105, RULE_itemProjectileItem = 106, RULE_livingBodyCommonTags = 107, 
		RULE_absorptionAmount = 108, RULE_deathTime = 109, RULE_fallFlying = 110, 
		RULE_health = 111, RULE_hurtByTimestamp = 112, RULE_hurtTime = 113, RULE_sleepingX = 114, 
		RULE_sleepingY = 115, RULE_sleepingZ = 116, RULE_livingBodyAttributes = 117, 
		RULE_livingBodyAttribute = 118, RULE_base = 119, RULE_livingBodyModifiers = 120, 
		RULE_livingBodyModify = 121, RULE_livingBodyAmount = 122, RULE_livingBodyModifyName = 123, 
		RULE_livingBodyOperation = 124, RULE_livingBodyName = 125, RULE_livingBodyActiveEffects = 126, 
		RULE_livingBodyActiveEffect = 127, RULE_ambient = 128, RULE_amplifier = 129, 
		RULE_duration = 130, RULE_factor_calculation_data = 131, RULE_effect_changed_timestamp = 132, 
		RULE_factor_current = 133, RULE_factor_previous_frame = 134, RULE_factor_start = 135, 
		RULE_factor_target = 136, RULE_had_effect_last_tick = 137, RULE_padding_duration = 138, 
		RULE_show_icon = 139, RULE_show_particles = 140, RULE_mineCartCommonTags = 141, 
		RULE_customDisplayTile = 142, RULE_displayOffset = 143, RULE_displayState = 144, 
		RULE_mobCommonTags = 145, RULE_canPickUpLoot = 146, RULE_deathLootTable = 147, 
		RULE_deathLootTableSeed = 148, RULE_leftHanded = 149, RULE_noAI = 150, 
		RULE_persistenceRequired = 151, RULE_leash = 152, RULE_armorItems = 153, 
		RULE_armorDropChances = 154, RULE_handItems = 155, RULE_handDropChances = 156, 
		RULE_projectileCommonTags = 157, RULE_hasBeenShot = 158, RULE_leftOwner = 159, 
		RULE_tameableMobExtraFields = 160, RULE_sitting = 161;
	public static readonly string[] ruleNames = {
		"content", "trees", "itemCommonTags", "count", "id", "slot", "tag", "attributeModifiers", 
		"attributeModifier", "amount", "attributeName", "name", "operation", "attributeSlot", 
		"uuid", "canDestroy", "customCreativeLock", "customModelData", "damage", 
		"display", "color", "lore", "jsonText", "enchantments", "enchantment", 
		"lvl", "hideFlags", "repairCost", "trim", "material", "pattern", "unbreakable", 
		"angryCreatureExtraField", "angerTime", "angryAt", "cannotEnterHiveTicks", 
		"cropsGrownSincePollination", "flowerPos", "hasNectar", "hasStung", "hivePos", 
		"ticksSincePollination", "arrowProjectileCommonTags", "crit", "shotFromCrossbow", 
		"soundEvent", "inGround", "pickup", "pierceLevel", "shake", "life", "arrowDamage", 
		"inBlockState", "blockStateName", "blockStateProperties", "propertiesKeyValuePair", 
		"propertiesKey", "propertiesValue", "breedableMobExtraFields", "age", 
		"forcedAge", "inLove", "loveCause", "commonTagsForMobsSpawnedInRaids", 
		"canJoinRaid", "patrolLeader", "patrolling", "patrolTarget", "raidId", 
		"wave", "commonTagsForRideableEntities", "bred", "eatingHaystack", "owner", 
		"tame", "temper", "commonTagsForZombies", "canBreakDoors", "drownedConversionTime", 
		"inWaterTime", "isBaby", "containerEntityCommonTags", "lootTable", "lootTableSeed", 
		"containerItems", "entityCommonTags", "air", "customName", "customNameVisible", 
		"fallDistance", "fire", "glowing", "hasVisualFire", "invulnerable", "motion", 
		"noGravity", "portalCooldown", "rotation", "silent", "tags", "ticksFrozen", 
		"passengers", "entityData", "fireballProjectileCommonTags", "power", "itemProjectileCommonTags", 
		"itemProjectileItem", "livingBodyCommonTags", "absorptionAmount", "deathTime", 
		"fallFlying", "health", "hurtByTimestamp", "hurtTime", "sleepingX", "sleepingY", 
		"sleepingZ", "livingBodyAttributes", "livingBodyAttribute", "base", "livingBodyModifiers", 
		"livingBodyModify", "livingBodyAmount", "livingBodyModifyName", "livingBodyOperation", 
		"livingBodyName", "livingBodyActiveEffects", "livingBodyActiveEffect", 
		"ambient", "amplifier", "duration", "factor_calculation_data", "effect_changed_timestamp", 
		"factor_current", "factor_previous_frame", "factor_start", "factor_target", 
		"had_effect_last_tick", "padding_duration", "show_icon", "show_particles", 
		"mineCartCommonTags", "customDisplayTile", "displayOffset", "displayState", 
		"mobCommonTags", "canPickUpLoot", "deathLootTable", "deathLootTableSeed", 
		"leftHanded", "noAI", "persistenceRequired", "leash", "armorItems", "armorDropChances", 
		"handItems", "handDropChances", "projectileCommonTags", "hasBeenShot", 
		"leftOwner", "tameableMobExtraFields", "sitting"
	};

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'", "'Count:'", "'id:'", "'Slot:'", "'amount:'", "','", 
		"'AttributeName:'", "'Name:'", "'Operation:'", "'mainhand'", "'offhand'", 
		"'head'", "'chest'", "'legs'", "'feet'", "'UUID:['", "']'", "'CanDestroy:['", 
		"'CustomCreativeLock:{}'", "'CustomModelData:'", "'Damage:'", "'display:{'", 
		"'color:'", "'Lore:['", "''[{'", "':'", "'}]''", "'Enchantments:['", "'lvl:'", 
		"'s'", "'HideFlags:'", "'RepairCost:'", "'material:'", "'pattern:'", "'Unbreakable:'", 
		"'AngerTime:'", "'AngryAt:['", "'CannotEnterHiveTicks:'", "'CropsGrownSincePollination:'", 
		"'FlowerPos:['", "'HGasNectar:'", "'HasStung:'", "'HivePos:['", "'TicksSincePollination:'", 
		"'crit:'", "'ShotFromCrossbow:'", "'SoundEvent:'", "'inGround:'", "'pickup:'", 
		"'PierceLevel:'", "'shake:'", "'life:'", "'damage:'", "'inBlockState:{'", 
		"'Properties:{'", "'Age:'", "'ForcedAge:'", "'InLove:'", "'LoveCause:['", 
		"'CanJoinRaid:'", "'PatrolLeader:'", "'Patrolling:'", "'PatrolTarget:['", 
		"'RaidId:'", "'Wave:'", "'Bred:'", "'EatingHaystack:'", "'Owner:['", "'Tame:'", 
		"'Temper:'", "'CanBreakDoors:'", "'DrownedConversionTime:'", "'InWaterTime:'", 
		"'IsBaby:'", "'LootTable:'", "'LootTableSeed:'", "'Items:['", "'Air:'", 
		"'CustomName:'", "'CustomNameVisible:'", "'FallDistance:'", "'Fire:'", 
		"'Glowing:'", "'HasVisualFire:'", "'Invulnerable:'", "'Motion:['", "'NoGravity:'", 
		"'PortalCooldown:'", "'Rotation:['", "'Silent:'", "'Tags:['", "'TicksFrozen:'", 
		"'Passengers:['", "'power:['", "'AbsorptionAmount:'", "'DeathTime:'", 
		"'FallFlying:'", "'Health:'", "'HurtByTimestamp:'", "'HurtTime:'", "'SleepingX:'", 
		"'SleepingY:'", "'SleepingZ:'", "'Attributes:['", "'Base:'", "'Modifiers['", 
		"'Amount:'", "'active_effects:['", "'ambient:'", "'amplifier:'", "'duration:'", 
		"'effect_changed_timestamp:'", "'factor_current:'", "'factor_previous_frame:'", 
		"'factor_start:'", "'factor_target:'", "'had_effect_last_tick:'", "'padding_duration:'", 
		"'show_icon:'", "'show_particles:'", "'CustomDisplayTile:'", "'displayOffset:'", 
		"'DisplayState:{'", "'CanPickUpLoot:'", "'DeathLootTable:'", "'DeathLootTableSeed:'", 
		"'LeftHanded:'", "'NoAI:'", "'PersistenceRequired:'", "'ArmorItems:['", 
		"'ArmorDropChances:['", "'HandItems:['", "'HandDropChances:['", "'HasBeenShot:'", 
		"'LeftOwner:'", "'Sitting:'", null, null, null, null, null, null, "'\"text\"'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "Bool", "Byte", "Int", "Decimal", 
		"IdString", "Any", "Key", "Value"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "commonNBTTrees.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static commonNBTTreesParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}

		public commonNBTTreesParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public commonNBTTreesParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class ContentContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Any() { return GetToken(commonNBTTreesParser.Any, 0); }
		public ContentContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_content; } }
	}

	[RuleVersion(0)]
	public ContentContext content() {
		ContentContext _localctx = new ContentContext(Context, State);
		EnterRule(_localctx, 0, RULE_content);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 324;
			Match(Any);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TreesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext itemCommonTags() {
			return GetRuleContext<ItemCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AngryCreatureExtraFieldContext angryCreatureExtraField() {
			return GetRuleContext<AngryCreatureExtraFieldContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ArrowProjectileCommonTagsContext arrowProjectileCommonTags() {
			return GetRuleContext<ArrowProjectileCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BreedableMobExtraFieldsContext breedableMobExtraFields() {
			return GetRuleContext<BreedableMobExtraFieldsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommonTagsForMobsSpawnedInRaidsContext commonTagsForMobsSpawnedInRaids() {
			return GetRuleContext<CommonTagsForMobsSpawnedInRaidsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommonTagsForRideableEntitiesContext commonTagsForRideableEntities() {
			return GetRuleContext<CommonTagsForRideableEntitiesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommonTagsForZombiesContext commonTagsForZombies() {
			return GetRuleContext<CommonTagsForZombiesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ContainerEntityCommonTagsContext containerEntityCommonTags() {
			return GetRuleContext<ContainerEntityCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityCommonTagsContext entityCommonTags() {
			return GetRuleContext<EntityCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FireballProjectileCommonTagsContext fireballProjectileCommonTags() {
			return GetRuleContext<FireballProjectileCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemProjectileCommonTagsContext itemProjectileCommonTags() {
			return GetRuleContext<ItemProjectileCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyCommonTagsContext livingBodyCommonTags() {
			return GetRuleContext<LivingBodyCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MineCartCommonTagsContext mineCartCommonTags() {
			return GetRuleContext<MineCartCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MobCommonTagsContext mobCommonTags() {
			return GetRuleContext<MobCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ProjectileCommonTagsContext projectileCommonTags() {
			return GetRuleContext<ProjectileCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TameableMobExtraFieldsContext tameableMobExtraFields() {
			return GetRuleContext<TameableMobExtraFieldsContext>(0);
		}
		public TreesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_trees; } }
	}

	[RuleVersion(0)]
	public TreesContext trees() {
		TreesContext _localctx = new TreesContext(Context, State);
		EnterRule(_localctx, 2, RULE_trees);
		try {
			State = 342;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,0,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 326;
				itemCommonTags();
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 327;
				angryCreatureExtraField();
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 328;
				arrowProjectileCommonTags();
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 329;
				breedableMobExtraFields();
				}
				break;
			case 5:
				EnterOuterAlt(_localctx, 5);
				{
				State = 330;
				commonTagsForMobsSpawnedInRaids();
				}
				break;
			case 6:
				EnterOuterAlt(_localctx, 6);
				{
				State = 331;
				commonTagsForRideableEntities();
				}
				break;
			case 7:
				EnterOuterAlt(_localctx, 7);
				{
				State = 332;
				commonTagsForZombies();
				}
				break;
			case 8:
				EnterOuterAlt(_localctx, 8);
				{
				State = 333;
				containerEntityCommonTags();
				}
				break;
			case 9:
				EnterOuterAlt(_localctx, 9);
				{
				State = 334;
				entityCommonTags();
				}
				break;
			case 10:
				EnterOuterAlt(_localctx, 10);
				{
				State = 335;
				fireballProjectileCommonTags();
				}
				break;
			case 11:
				EnterOuterAlt(_localctx, 11);
				{
				State = 336;
				itemProjectileCommonTags();
				}
				break;
			case 12:
				EnterOuterAlt(_localctx, 12);
				{
				State = 337;
				livingBodyCommonTags();
				}
				break;
			case 13:
				EnterOuterAlt(_localctx, 13);
				{
				State = 338;
				mineCartCommonTags();
				}
				break;
			case 14:
				EnterOuterAlt(_localctx, 14);
				{
				State = 339;
				mobCommonTags();
				}
				break;
			case 15:
				EnterOuterAlt(_localctx, 15);
				{
				State = 340;
				projectileCommonTags();
				}
				break;
			case 16:
				EnterOuterAlt(_localctx, 16);
				{
				State = 341;
				tameableMobExtraFields();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CountContext count() {
			return GetRuleContext<CountContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdContext id() {
			return GetRuleContext<IdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TagContext tag() {
			return GetRuleContext<TagContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SlotContext slot() {
			return GetRuleContext<SlotContext>(0);
		}
		public ItemCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemCommonTags; } }
	}

	[RuleVersion(0)]
	public ItemCommonTagsContext itemCommonTags() {
		ItemCommonTagsContext _localctx = new ItemCommonTagsContext(Context, State);
		EnterRule(_localctx, 4, RULE_itemCommonTags);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 344;
			Match(T__0);
			State = 349;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,1,Context) ) {
			case 1:
				{
				State = 345;
				count();
				}
				break;
			case 2:
				{
				State = 346;
				id();
				}
				break;
			case 3:
				{
				State = 347;
				tag();
				}
				break;
			case 4:
				{
				State = 348;
				slot();
				}
				break;
			}
			State = 351;
			Match(T__1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public CountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_count; } }
	}

	[RuleVersion(0)]
	public CountContext count() {
		CountContext _localctx = new CountContext(Context, State);
		EnterRule(_localctx, 6, RULE_count);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 353;
			Match(T__2);
			State = 354;
			Match(Int);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public IdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_id; } }
	}

	[RuleVersion(0)]
	public IdContext id() {
		IdContext _localctx = new IdContext(Context, State);
		EnterRule(_localctx, 8, RULE_id);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 356;
			Match(T__3);
			State = 357;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SlotContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Byte() { return GetToken(commonNBTTreesParser.Byte, 0); }
		public SlotContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slot; } }
	}

	[RuleVersion(0)]
	public SlotContext slot() {
		SlotContext _localctx = new SlotContext(Context, State);
		EnterRule(_localctx, 10, RULE_slot);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 359;
			Match(T__4);
			State = 360;
			Match(Byte);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TagContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AttributeModifiersContext attributeModifiers() {
			return GetRuleContext<AttributeModifiersContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CanDestroyContext canDestroy() {
			return GetRuleContext<CanDestroyContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CustomCreativeLockContext customCreativeLock() {
			return GetRuleContext<CustomCreativeLockContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CustomModelDataContext customModelData() {
			return GetRuleContext<CustomModelDataContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DamageContext damage() {
			return GetRuleContext<DamageContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DisplayContext display() {
			return GetRuleContext<DisplayContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EnchantmentsContext enchantments() {
			return GetRuleContext<EnchantmentsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HideFlagsContext hideFlags() {
			return GetRuleContext<HideFlagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RepairCostContext repairCost() {
			return GetRuleContext<RepairCostContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TrimContext trim() {
			return GetRuleContext<TrimContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public UnbreakableContext unbreakable() {
			return GetRuleContext<UnbreakableContext>(0);
		}
		public TagContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tag; } }
	}

	[RuleVersion(0)]
	public TagContext tag() {
		TagContext _localctx = new TagContext(Context, State);
		EnterRule(_localctx, 12, RULE_tag);
		try {
			State = 373;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__4:
			case T__5:
			case T__7:
			case T__8:
			case T__9:
			case T__16:
				EnterOuterAlt(_localctx, 1);
				{
				State = 362;
				attributeModifiers();
				}
				break;
			case T__18:
				EnterOuterAlt(_localctx, 2);
				{
				State = 363;
				canDestroy();
				}
				break;
			case T__19:
				EnterOuterAlt(_localctx, 3);
				{
				State = 364;
				customCreativeLock();
				}
				break;
			case T__20:
				EnterOuterAlt(_localctx, 4);
				{
				State = 365;
				customModelData();
				}
				break;
			case T__21:
				EnterOuterAlt(_localctx, 5);
				{
				State = 366;
				damage();
				}
				break;
			case T__22:
				EnterOuterAlt(_localctx, 6);
				{
				State = 367;
				display();
				}
				break;
			case T__28:
				EnterOuterAlt(_localctx, 7);
				{
				State = 368;
				enchantments();
				}
				break;
			case T__31:
				EnterOuterAlt(_localctx, 8);
				{
				State = 369;
				hideFlags();
				}
				break;
			case T__32:
				EnterOuterAlt(_localctx, 9);
				{
				State = 370;
				repairCost();
				}
				break;
			case T__33:
			case T__34:
				EnterOuterAlt(_localctx, 10);
				{
				State = 371;
				trim();
				}
				break;
			case T__35:
				EnterOuterAlt(_localctx, 11);
				{
				State = 372;
				unbreakable();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributeModifiersContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AttributeModifierContext attributeModifier() {
			return GetRuleContext<AttributeModifierContext>(0);
		}
		public AttributeModifiersContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributeModifiers; } }
	}

	[RuleVersion(0)]
	public AttributeModifiersContext attributeModifiers() {
		AttributeModifiersContext _localctx = new AttributeModifiersContext(Context, State);
		EnterRule(_localctx, 14, RULE_attributeModifiers);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 375;
			attributeModifier();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributeModifierContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AmountContext amount() {
			return GetRuleContext<AmountContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AttributeNameContext attributeName() {
			return GetRuleContext<AttributeNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NameContext name() {
			return GetRuleContext<NameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public OperationContext operation() {
			return GetRuleContext<OperationContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AttributeSlotContext attributeSlot() {
			return GetRuleContext<AttributeSlotContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public UuidContext uuid() {
			return GetRuleContext<UuidContext>(0);
		}
		public AttributeModifierContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributeModifier; } }
	}

	[RuleVersion(0)]
	public AttributeModifierContext attributeModifier() {
		AttributeModifierContext _localctx = new AttributeModifierContext(Context, State);
		EnterRule(_localctx, 16, RULE_attributeModifier);
		try {
			State = 383;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__5:
				EnterOuterAlt(_localctx, 1);
				{
				State = 377;
				amount();
				}
				break;
			case T__7:
				EnterOuterAlt(_localctx, 2);
				{
				State = 378;
				attributeName();
				}
				break;
			case T__8:
				EnterOuterAlt(_localctx, 3);
				{
				State = 379;
				name();
				}
				break;
			case T__9:
				EnterOuterAlt(_localctx, 4);
				{
				State = 380;
				operation();
				}
				break;
			case T__4:
				EnterOuterAlt(_localctx, 5);
				{
				State = 381;
				attributeSlot();
				}
				break;
			case T__16:
				EnterOuterAlt(_localctx, 6);
				{
				State = 382;
				uuid();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AmountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public AmountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_amount; } }
	}

	[RuleVersion(0)]
	public AmountContext amount() {
		AmountContext _localctx = new AmountContext(Context, State);
		EnterRule(_localctx, 18, RULE_amount);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 385;
			Match(T__5);
			State = 386;
			Match(Decimal);
			State = 388;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 387;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributeNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public AttributeNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributeName; } }
	}

	[RuleVersion(0)]
	public AttributeNameContext attributeName() {
		AttributeNameContext _localctx = new AttributeNameContext(Context, State);
		EnterRule(_localctx, 20, RULE_attributeName);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 390;
			Match(T__7);
			State = 391;
			Match(IdString);
			State = 393;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 392;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class NameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public NameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_name; } }
	}

	[RuleVersion(0)]
	public NameContext name() {
		NameContext _localctx = new NameContext(Context, State);
		EnterRule(_localctx, 22, RULE_name);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 395;
			Match(T__8);
			State = 396;
			Match(IdString);
			State = 398;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 397;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class OperationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public OperationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_operation; } }
	}

	[RuleVersion(0)]
	public OperationContext operation() {
		OperationContext _localctx = new OperationContext(Context, State);
		EnterRule(_localctx, 24, RULE_operation);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 400;
			Match(T__9);
			State = 401;
			Match(Int);
			State = 403;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 402;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributeSlotContext : ParserRuleContext {
		public AttributeSlotContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributeSlot; } }
	}

	[RuleVersion(0)]
	public AttributeSlotContext attributeSlot() {
		AttributeSlotContext _localctx = new AttributeSlotContext(Context, State);
		EnterRule(_localctx, 26, RULE_attributeSlot);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 405;
			Match(T__4);
			State = 406;
			_la = TokenStream.LA(1);
			if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & 129024L) != 0)) ) {
			ErrorHandler.RecoverInline(this);
			}
			else {
				ErrorHandler.ReportMatch(this);
			    Consume();
			}
			State = 408;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 407;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class UuidContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public UuidContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_uuid; } }
	}

	[RuleVersion(0)]
	public UuidContext uuid() {
		UuidContext _localctx = new UuidContext(Context, State);
		EnterRule(_localctx, 28, RULE_uuid);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 410;
			Match(T__16);
			State = 411;
			Match(Int);
			State = 412;
			Match(T__6);
			State = 413;
			Match(Int);
			State = 414;
			Match(T__6);
			State = 415;
			Match(Int);
			State = 416;
			Match(T__6);
			State = 417;
			Match(Int);
			State = 418;
			Match(T__17);
			State = 420;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,9,Context) ) {
			case 1:
				{
				State = 419;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CanDestroyContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] IdString() { return GetTokens(commonNBTTreesParser.IdString); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString(int i) {
			return GetToken(commonNBTTreesParser.IdString, i);
		}
		public CanDestroyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_canDestroy; } }
	}

	[RuleVersion(0)]
	public CanDestroyContext canDestroy() {
		CanDestroyContext _localctx = new CanDestroyContext(Context, State);
		EnterRule(_localctx, 30, RULE_canDestroy);
		int _la;
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 422;
			Match(T__18);
			State = 429;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,11,Context);
			while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1+1 ) {
					{
					{
					State = 423;
					Match(IdString);
					State = 425;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
					if (_la==T__6) {
						{
						State = 424;
						Match(T__6);
						}
					}

					}
					} 
				}
				State = 431;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,11,Context);
			}
			State = 432;
			Match(T__17);
			State = 434;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 433;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CustomCreativeLockContext : ParserRuleContext {
		public CustomCreativeLockContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_customCreativeLock; } }
	}

	[RuleVersion(0)]
	public CustomCreativeLockContext customCreativeLock() {
		CustomCreativeLockContext _localctx = new CustomCreativeLockContext(Context, State);
		EnterRule(_localctx, 32, RULE_customCreativeLock);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 436;
			Match(T__19);
			State = 438;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 437;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CustomModelDataContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public CustomModelDataContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_customModelData; } }
	}

	[RuleVersion(0)]
	public CustomModelDataContext customModelData() {
		CustomModelDataContext _localctx = new CustomModelDataContext(Context, State);
		EnterRule(_localctx, 34, RULE_customModelData);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 440;
			Match(T__20);
			State = 441;
			Match(Int);
			State = 443;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 442;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DamageContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public DamageContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_damage; } }
	}

	[RuleVersion(0)]
	public DamageContext damage() {
		DamageContext _localctx = new DamageContext(Context, State);
		EnterRule(_localctx, 36, RULE_damage);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 445;
			Match(T__21);
			State = 446;
			Match(Int);
			State = 448;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 447;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DisplayContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ColorContext color() {
			return GetRuleContext<ColorContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LoreContext lore() {
			return GetRuleContext<LoreContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NameContext name() {
			return GetRuleContext<NameContext>(0);
		}
		public DisplayContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_display; } }
	}

	[RuleVersion(0)]
	public DisplayContext display() {
		DisplayContext _localctx = new DisplayContext(Context, State);
		EnterRule(_localctx, 38, RULE_display);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 450;
			Match(T__22);
			State = 452;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__23) {
				{
				State = 451;
				color();
				}
			}

			State = 455;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__24) {
				{
				State = 454;
				lore();
				}
			}

			State = 458;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__8) {
				{
				State = 457;
				name();
				}
			}

			State = 460;
			Match(T__1);
			State = 462;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 461;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ColorContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public ColorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_color; } }
	}

	[RuleVersion(0)]
	public ColorContext color() {
		ColorContext _localctx = new ColorContext(Context, State);
		EnterRule(_localctx, 40, RULE_color);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 464;
			Match(T__23);
			State = 465;
			Match(Int);
			State = 467;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 466;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LoreContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ContentContext content() {
			return GetRuleContext<ContentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonTextContext[] jsonText() {
			return GetRuleContexts<JsonTextContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public JsonTextContext jsonText(int i) {
			return GetRuleContext<JsonTextContext>(i);
		}
		public LoreContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lore; } }
	}

	[RuleVersion(0)]
	public LoreContext lore() {
		LoreContext _localctx = new LoreContext(Context, State);
		EnterRule(_localctx, 42, RULE_lore);
		int _la;
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 469;
			Match(T__24);
			State = 481;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case Any:
				{
				State = 470;
				content();
				}
				break;
			case T__25:
				{
				{
				State = 471;
				jsonText();
				State = 478;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,22,Context);
				while ( _alt!=1 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
					if ( _alt==1+1 ) {
						{
						{
						State = 472;
						Match(T__6);
						State = 474;
						ErrorHandler.Sync(this);
						_la = TokenStream.LA(1);
						if (_la==T__25) {
							{
							State = 473;
							jsonText();
							}
						}

						}
						} 
					}
					State = 480;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,22,Context);
				}
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
			State = 483;
			Match(T__17);
			State = 485;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 484;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class JsonTextContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Key() { return GetToken(commonNBTTreesParser.Key, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Value() { return GetToken(commonNBTTreesParser.Value, 0); }
		public JsonTextContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_jsonText; } }
	}

	[RuleVersion(0)]
	public JsonTextContext jsonText() {
		JsonTextContext _localctx = new JsonTextContext(Context, State);
		EnterRule(_localctx, 44, RULE_jsonText);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 487;
			Match(T__25);
			State = 488;
			Match(Key);
			State = 489;
			Match(T__26);
			State = 490;
			Match(Value);
			State = 491;
			Match(T__27);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EnchantmentsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public EnchantmentContext[] enchantment() {
			return GetRuleContexts<EnchantmentContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public EnchantmentContext enchantment(int i) {
			return GetRuleContext<EnchantmentContext>(i);
		}
		public EnchantmentsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_enchantments; } }
	}

	[RuleVersion(0)]
	public EnchantmentsContext enchantments() {
		EnchantmentsContext _localctx = new EnchantmentsContext(Context, State);
		EnterRule(_localctx, 46, RULE_enchantments);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 493;
			Match(T__28);
			State = 494;
			enchantment();
			State = 499;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 495;
				Match(T__6);
				State = 497;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__0 || _la==T__29) {
					{
					State = 496;
					enchantment();
					}
				}

				}
			}

			State = 501;
			Match(T__17);
			State = 503;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 502;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EnchantmentContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public IdContext id() {
			return GetRuleContext<IdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LvlContext lvl() {
			return GetRuleContext<LvlContext>(0);
		}
		public EnchantmentContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_enchantment; } }
	}

	[RuleVersion(0)]
	public EnchantmentContext enchantment() {
		EnchantmentContext _localctx = new EnchantmentContext(Context, State);
		EnterRule(_localctx, 48, RULE_enchantment);
		int _la;
		try {
			State = 518;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__0:
				EnterOuterAlt(_localctx, 1);
				{
				State = 505;
				Match(T__0);
				{
				State = 506;
				id();
				State = 508;
				ErrorHandler.Sync(this);
				switch ( Interpreter.AdaptivePredict(TokenStream,28,Context) ) {
				case 1:
					{
					State = 507;
					Match(T__6);
					}
					break;
				}
				}
				}
				break;
			case T__29:
				EnterOuterAlt(_localctx, 2);
				{
				{
				State = 510;
				lvl();
				State = 512;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__6) {
					{
					State = 511;
					Match(T__6);
					}
				}

				}
				State = 514;
				Match(T__1);
				State = 516;
				ErrorHandler.Sync(this);
				switch ( Interpreter.AdaptivePredict(TokenStream,30,Context) ) {
				case 1:
					{
					State = 515;
					Match(T__6);
					}
					break;
				}
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LvlContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public LvlContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lvl; } }
	}

	[RuleVersion(0)]
	public LvlContext lvl() {
		LvlContext _localctx = new LvlContext(Context, State);
		EnterRule(_localctx, 50, RULE_lvl);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 520;
			Match(T__29);
			State = 521;
			Match(Decimal);
			State = 522;
			Match(T__30);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HideFlagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public HideFlagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hideFlags; } }
	}

	[RuleVersion(0)]
	public HideFlagsContext hideFlags() {
		HideFlagsContext _localctx = new HideFlagsContext(Context, State);
		EnterRule(_localctx, 52, RULE_hideFlags);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 524;
			Match(T__31);
			State = 525;
			Match(Int);
			State = 527;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 526;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RepairCostContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public RepairCostContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_repairCost; } }
	}

	[RuleVersion(0)]
	public RepairCostContext repairCost() {
		RepairCostContext _localctx = new RepairCostContext(Context, State);
		EnterRule(_localctx, 54, RULE_repairCost);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 529;
			Match(T__32);
			State = 530;
			Match(Int);
			State = 532;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 531;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TrimContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public MaterialContext material() {
			return GetRuleContext<MaterialContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PatternContext pattern() {
			return GetRuleContext<PatternContext>(0);
		}
		public TrimContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_trim; } }
	}

	[RuleVersion(0)]
	public TrimContext trim() {
		TrimContext _localctx = new TrimContext(Context, State);
		EnterRule(_localctx, 56, RULE_trim);
		try {
			State = 536;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__33:
				EnterOuterAlt(_localctx, 1);
				{
				State = 534;
				material();
				}
				break;
			case T__34:
				EnterOuterAlt(_localctx, 2);
				{
				State = 535;
				pattern();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MaterialContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public MaterialContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_material; } }
	}

	[RuleVersion(0)]
	public MaterialContext material() {
		MaterialContext _localctx = new MaterialContext(Context, State);
		EnterRule(_localctx, 58, RULE_material);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 538;
			Match(T__33);
			State = 539;
			Match(IdString);
			State = 541;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 540;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PatternContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public PatternContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pattern; } }
	}

	[RuleVersion(0)]
	public PatternContext pattern() {
		PatternContext _localctx = new PatternContext(Context, State);
		EnterRule(_localctx, 60, RULE_pattern);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 543;
			Match(T__34);
			State = 544;
			Match(IdString);
			State = 546;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 545;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class UnbreakableContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public UnbreakableContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_unbreakable; } }
	}

	[RuleVersion(0)]
	public UnbreakableContext unbreakable() {
		UnbreakableContext _localctx = new UnbreakableContext(Context, State);
		EnterRule(_localctx, 62, RULE_unbreakable);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 548;
			Match(T__35);
			State = 549;
			Match(Bool);
			State = 551;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 550;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AngryCreatureExtraFieldContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AngerTimeContext angerTime() {
			return GetRuleContext<AngerTimeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AngryAtContext angryAt() {
			return GetRuleContext<AngryAtContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CannotEnterHiveTicksContext cannotEnterHiveTicks() {
			return GetRuleContext<CannotEnterHiveTicksContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CropsGrownSincePollinationContext cropsGrownSincePollination() {
			return GetRuleContext<CropsGrownSincePollinationContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FlowerPosContext flowerPos() {
			return GetRuleContext<FlowerPosContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HasNectarContext hasNectar() {
			return GetRuleContext<HasNectarContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HasStungContext hasStung() {
			return GetRuleContext<HasStungContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HivePosContext hivePos() {
			return GetRuleContext<HivePosContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TicksSincePollinationContext ticksSincePollination() {
			return GetRuleContext<TicksSincePollinationContext>(0);
		}
		public AngryCreatureExtraFieldContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_angryCreatureExtraField; } }
	}

	[RuleVersion(0)]
	public AngryCreatureExtraFieldContext angryCreatureExtraField() {
		AngryCreatureExtraFieldContext _localctx = new AngryCreatureExtraFieldContext(Context, State);
		EnterRule(_localctx, 64, RULE_angryCreatureExtraField);
		try {
			State = 562;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__36:
				EnterOuterAlt(_localctx, 1);
				{
				State = 553;
				angerTime();
				}
				break;
			case T__37:
				EnterOuterAlt(_localctx, 2);
				{
				State = 554;
				angryAt();
				}
				break;
			case T__38:
				EnterOuterAlt(_localctx, 3);
				{
				State = 555;
				cannotEnterHiveTicks();
				}
				break;
			case T__39:
				EnterOuterAlt(_localctx, 4);
				{
				State = 556;
				cropsGrownSincePollination();
				}
				break;
			case T__40:
				EnterOuterAlt(_localctx, 5);
				{
				State = 557;
				flowerPos();
				}
				break;
			case T__41:
				EnterOuterAlt(_localctx, 6);
				{
				State = 558;
				hasNectar();
				}
				break;
			case T__42:
				EnterOuterAlt(_localctx, 7);
				{
				State = 559;
				hasStung();
				}
				break;
			case T__43:
				EnterOuterAlt(_localctx, 8);
				{
				State = 560;
				hivePos();
				}
				break;
			case T__44:
				EnterOuterAlt(_localctx, 9);
				{
				State = 561;
				ticksSincePollination();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AngerTimeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public AngerTimeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_angerTime; } }
	}

	[RuleVersion(0)]
	public AngerTimeContext angerTime() {
		AngerTimeContext _localctx = new AngerTimeContext(Context, State);
		EnterRule(_localctx, 66, RULE_angerTime);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 564;
			Match(T__36);
			State = 565;
			Match(Int);
			State = 567;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 566;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AngryAtContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public AngryAtContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_angryAt; } }
	}

	[RuleVersion(0)]
	public AngryAtContext angryAt() {
		AngryAtContext _localctx = new AngryAtContext(Context, State);
		EnterRule(_localctx, 68, RULE_angryAt);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 569;
			Match(T__37);
			State = 570;
			Match(Int);
			State = 571;
			Match(T__6);
			State = 572;
			Match(Int);
			State = 573;
			Match(T__6);
			State = 574;
			Match(Int);
			State = 575;
			Match(T__6);
			State = 576;
			Match(Int);
			State = 577;
			Match(T__17);
			State = 579;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 578;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CannotEnterHiveTicksContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public CannotEnterHiveTicksContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cannotEnterHiveTicks; } }
	}

	[RuleVersion(0)]
	public CannotEnterHiveTicksContext cannotEnterHiveTicks() {
		CannotEnterHiveTicksContext _localctx = new CannotEnterHiveTicksContext(Context, State);
		EnterRule(_localctx, 70, RULE_cannotEnterHiveTicks);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 581;
			Match(T__38);
			State = 582;
			Match(Int);
			State = 584;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 583;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CropsGrownSincePollinationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public CropsGrownSincePollinationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_cropsGrownSincePollination; } }
	}

	[RuleVersion(0)]
	public CropsGrownSincePollinationContext cropsGrownSincePollination() {
		CropsGrownSincePollinationContext _localctx = new CropsGrownSincePollinationContext(Context, State);
		EnterRule(_localctx, 72, RULE_cropsGrownSincePollination);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 586;
			Match(T__39);
			State = 587;
			Match(Int);
			State = 589;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 588;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FlowerPosContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public FlowerPosContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_flowerPos; } }
	}

	[RuleVersion(0)]
	public FlowerPosContext flowerPos() {
		FlowerPosContext _localctx = new FlowerPosContext(Context, State);
		EnterRule(_localctx, 74, RULE_flowerPos);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 591;
			Match(T__40);
			State = 592;
			Match(Int);
			State = 593;
			Match(T__6);
			State = 594;
			Match(Int);
			State = 595;
			Match(T__6);
			State = 596;
			Match(Int);
			State = 597;
			Match(T__17);
			State = 599;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 598;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HasNectarContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public HasNectarContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hasNectar; } }
	}

	[RuleVersion(0)]
	public HasNectarContext hasNectar() {
		HasNectarContext _localctx = new HasNectarContext(Context, State);
		EnterRule(_localctx, 76, RULE_hasNectar);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 601;
			Match(T__41);
			State = 602;
			Match(Bool);
			State = 604;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 603;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HasStungContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public HasStungContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hasStung; } }
	}

	[RuleVersion(0)]
	public HasStungContext hasStung() {
		HasStungContext _localctx = new HasStungContext(Context, State);
		EnterRule(_localctx, 78, RULE_hasStung);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 606;
			Match(T__42);
			State = 607;
			Match(Bool);
			State = 609;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 608;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HivePosContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public HivePosContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hivePos; } }
	}

	[RuleVersion(0)]
	public HivePosContext hivePos() {
		HivePosContext _localctx = new HivePosContext(Context, State);
		EnterRule(_localctx, 80, RULE_hivePos);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 611;
			Match(T__43);
			State = 612;
			Match(Int);
			State = 613;
			Match(T__6);
			State = 614;
			Match(Int);
			State = 615;
			Match(T__6);
			State = 616;
			Match(Int);
			State = 617;
			Match(T__17);
			State = 619;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 618;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TicksSincePollinationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public TicksSincePollinationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_ticksSincePollination; } }
	}

	[RuleVersion(0)]
	public TicksSincePollinationContext ticksSincePollination() {
		TicksSincePollinationContext _localctx = new TicksSincePollinationContext(Context, State);
		EnterRule(_localctx, 82, RULE_ticksSincePollination);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 621;
			Match(T__44);
			State = 622;
			Match(Int);
			State = 624;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 623;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ArrowProjectileCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CritContext crit() {
			return GetRuleContext<CritContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ShotFromCrossbowContext shotFromCrossbow() {
			return GetRuleContext<ShotFromCrossbowContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SoundEventContext soundEvent() {
			return GetRuleContext<SoundEventContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public InGroundContext inGround() {
			return GetRuleContext<InGroundContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PickupContext pickup() {
			return GetRuleContext<PickupContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PierceLevelContext pierceLevel() {
			return GetRuleContext<PierceLevelContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ShakeContext shake() {
			return GetRuleContext<ShakeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LifeContext life() {
			return GetRuleContext<LifeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ArrowDamageContext arrowDamage() {
			return GetRuleContext<ArrowDamageContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public InBlockStateContext inBlockState() {
			return GetRuleContext<InBlockStateContext>(0);
		}
		public ArrowProjectileCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_arrowProjectileCommonTags; } }
	}

	[RuleVersion(0)]
	public ArrowProjectileCommonTagsContext arrowProjectileCommonTags() {
		ArrowProjectileCommonTagsContext _localctx = new ArrowProjectileCommonTagsContext(Context, State);
		EnterRule(_localctx, 84, RULE_arrowProjectileCommonTags);
		try {
			State = 636;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__45:
				EnterOuterAlt(_localctx, 1);
				{
				State = 626;
				crit();
				}
				break;
			case T__46:
				EnterOuterAlt(_localctx, 2);
				{
				State = 627;
				shotFromCrossbow();
				}
				break;
			case T__47:
				EnterOuterAlt(_localctx, 3);
				{
				State = 628;
				soundEvent();
				}
				break;
			case T__48:
				EnterOuterAlt(_localctx, 4);
				{
				State = 629;
				inGround();
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 5);
				{
				State = 630;
				pickup();
				}
				break;
			case T__50:
				EnterOuterAlt(_localctx, 6);
				{
				State = 631;
				pierceLevel();
				}
				break;
			case T__51:
				EnterOuterAlt(_localctx, 7);
				{
				State = 632;
				shake();
				}
				break;
			case T__52:
				EnterOuterAlt(_localctx, 8);
				{
				State = 633;
				life();
				}
				break;
			case T__53:
				EnterOuterAlt(_localctx, 9);
				{
				State = 634;
				arrowDamage();
				}
				break;
			case T__54:
			case T__55:
				EnterOuterAlt(_localctx, 10);
				{
				State = 635;
				inBlockState();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CritContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public CritContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_crit; } }
	}

	[RuleVersion(0)]
	public CritContext crit() {
		CritContext _localctx = new CritContext(Context, State);
		EnterRule(_localctx, 86, RULE_crit);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 638;
			Match(T__45);
			State = 639;
			Match(Bool);
			State = 641;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 640;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ShotFromCrossbowContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public ShotFromCrossbowContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_shotFromCrossbow; } }
	}

	[RuleVersion(0)]
	public ShotFromCrossbowContext shotFromCrossbow() {
		ShotFromCrossbowContext _localctx = new ShotFromCrossbowContext(Context, State);
		EnterRule(_localctx, 88, RULE_shotFromCrossbow);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 643;
			Match(T__46);
			State = 644;
			Match(Bool);
			State = 646;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 645;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SoundEventContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public SoundEventContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_soundEvent; } }
	}

	[RuleVersion(0)]
	public SoundEventContext soundEvent() {
		SoundEventContext _localctx = new SoundEventContext(Context, State);
		EnterRule(_localctx, 90, RULE_soundEvent);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 648;
			Match(T__47);
			State = 649;
			Match(Bool);
			State = 651;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 650;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InGroundContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public InGroundContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_inGround; } }
	}

	[RuleVersion(0)]
	public InGroundContext inGround() {
		InGroundContext _localctx = new InGroundContext(Context, State);
		EnterRule(_localctx, 92, RULE_inGround);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 653;
			Match(T__48);
			State = 654;
			Match(Bool);
			State = 656;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 655;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PickupContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Byte() { return GetToken(commonNBTTreesParser.Byte, 0); }
		public PickupContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pickup; } }
	}

	[RuleVersion(0)]
	public PickupContext pickup() {
		PickupContext _localctx = new PickupContext(Context, State);
		EnterRule(_localctx, 94, RULE_pickup);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 658;
			Match(T__49);
			State = 659;
			Match(Byte);
			State = 661;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 660;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PierceLevelContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Byte() { return GetToken(commonNBTTreesParser.Byte, 0); }
		public PierceLevelContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pierceLevel; } }
	}

	[RuleVersion(0)]
	public PierceLevelContext pierceLevel() {
		PierceLevelContext _localctx = new PierceLevelContext(Context, State);
		EnterRule(_localctx, 96, RULE_pierceLevel);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 663;
			Match(T__50);
			State = 664;
			Match(Byte);
			State = 666;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 665;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ShakeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Byte() { return GetToken(commonNBTTreesParser.Byte, 0); }
		public ShakeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_shake; } }
	}

	[RuleVersion(0)]
	public ShakeContext shake() {
		ShakeContext _localctx = new ShakeContext(Context, State);
		EnterRule(_localctx, 98, RULE_shake);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 668;
			Match(T__51);
			State = 669;
			Match(Byte);
			State = 671;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 670;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LifeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public LifeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_life; } }
	}

	[RuleVersion(0)]
	public LifeContext life() {
		LifeContext _localctx = new LifeContext(Context, State);
		EnterRule(_localctx, 100, RULE_life);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 673;
			Match(T__52);
			State = 674;
			Match(Decimal);
			State = 676;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 675;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ArrowDamageContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public ArrowDamageContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_arrowDamage; } }
	}

	[RuleVersion(0)]
	public ArrowDamageContext arrowDamage() {
		ArrowDamageContext _localctx = new ArrowDamageContext(Context, State);
		EnterRule(_localctx, 102, RULE_arrowDamage);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 678;
			Match(T__53);
			State = 679;
			Match(Decimal);
			State = 681;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 680;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InBlockStateContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BlockStateNameContext blockStateName() {
			return GetRuleContext<BlockStateNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockStatePropertiesContext blockStateProperties() {
			return GetRuleContext<BlockStatePropertiesContext>(0);
		}
		public InBlockStateContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_inBlockState; } }
	}

	[RuleVersion(0)]
	public InBlockStateContext inBlockState() {
		InBlockStateContext _localctx = new InBlockStateContext(Context, State);
		EnterRule(_localctx, 104, RULE_inBlockState);
		int _la;
		try {
			State = 690;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__54:
				EnterOuterAlt(_localctx, 1);
				{
				State = 683;
				Match(T__54);
				State = 684;
				blockStateName();
				}
				break;
			case T__55:
				EnterOuterAlt(_localctx, 2);
				{
				State = 685;
				blockStateProperties();
				State = 686;
				Match(T__1);
				State = 688;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__6) {
					{
					State = 687;
					Match(T__6);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BlockStateNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public BlockStateNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_blockStateName; } }
	}

	[RuleVersion(0)]
	public BlockStateNameContext blockStateName() {
		BlockStateNameContext _localctx = new BlockStateNameContext(Context, State);
		EnterRule(_localctx, 106, RULE_blockStateName);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 692;
			Match(T__8);
			State = 693;
			Match(IdString);
			State = 695;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 694;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BlockStatePropertiesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public PropertiesKeyValuePairContext[] propertiesKeyValuePair() {
			return GetRuleContexts<PropertiesKeyValuePairContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public PropertiesKeyValuePairContext propertiesKeyValuePair(int i) {
			return GetRuleContext<PropertiesKeyValuePairContext>(i);
		}
		public BlockStatePropertiesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_blockStateProperties; } }
	}

	[RuleVersion(0)]
	public BlockStatePropertiesContext blockStateProperties() {
		BlockStatePropertiesContext _localctx = new BlockStatePropertiesContext(Context, State);
		EnterRule(_localctx, 108, RULE_blockStateProperties);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 697;
			Match(T__55);
			{
			State = 698;
			propertiesKeyValuePair();
			State = 703;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 699;
				Match(T__6);
				State = 701;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==IdString) {
					{
					State = 700;
					propertiesKeyValuePair();
					}
				}

				}
			}

			}
			State = 705;
			Match(T__1);
			State = 707;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 706;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PropertiesKeyValuePairContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public PropertiesKeyContext propertiesKey() {
			return GetRuleContext<PropertiesKeyContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PropertiesValueContext propertiesValue() {
			return GetRuleContext<PropertiesValueContext>(0);
		}
		public PropertiesKeyValuePairContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_propertiesKeyValuePair; } }
	}

	[RuleVersion(0)]
	public PropertiesKeyValuePairContext propertiesKeyValuePair() {
		PropertiesKeyValuePairContext _localctx = new PropertiesKeyValuePairContext(Context, State);
		EnterRule(_localctx, 110, RULE_propertiesKeyValuePair);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 709;
			propertiesKey();
			State = 710;
			Match(T__26);
			State = 711;
			propertiesValue();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PropertiesKeyContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public PropertiesKeyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_propertiesKey; } }
	}

	[RuleVersion(0)]
	public PropertiesKeyContext propertiesKey() {
		PropertiesKeyContext _localctx = new PropertiesKeyContext(Context, State);
		EnterRule(_localctx, 112, RULE_propertiesKey);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 713;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PropertiesValueContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public PropertiesValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_propertiesValue; } }
	}

	[RuleVersion(0)]
	public PropertiesValueContext propertiesValue() {
		PropertiesValueContext _localctx = new PropertiesValueContext(Context, State);
		EnterRule(_localctx, 114, RULE_propertiesValue);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 715;
			Match(IdString);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BreedableMobExtraFieldsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AgeContext age() {
			return GetRuleContext<AgeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ForcedAgeContext forcedAge() {
			return GetRuleContext<ForcedAgeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public InLoveContext inLove() {
			return GetRuleContext<InLoveContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LoveCauseContext loveCause() {
			return GetRuleContext<LoveCauseContext>(0);
		}
		public BreedableMobExtraFieldsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_breedableMobExtraFields; } }
	}

	[RuleVersion(0)]
	public BreedableMobExtraFieldsContext breedableMobExtraFields() {
		BreedableMobExtraFieldsContext _localctx = new BreedableMobExtraFieldsContext(Context, State);
		EnterRule(_localctx, 116, RULE_breedableMobExtraFields);
		try {
			State = 721;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__56:
				EnterOuterAlt(_localctx, 1);
				{
				State = 717;
				age();
				}
				break;
			case T__57:
				EnterOuterAlt(_localctx, 2);
				{
				State = 718;
				forcedAge();
				}
				break;
			case T__58:
				EnterOuterAlt(_localctx, 3);
				{
				State = 719;
				inLove();
				}
				break;
			case T__59:
				EnterOuterAlt(_localctx, 4);
				{
				State = 720;
				loveCause();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AgeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public AgeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_age; } }
	}

	[RuleVersion(0)]
	public AgeContext age() {
		AgeContext _localctx = new AgeContext(Context, State);
		EnterRule(_localctx, 118, RULE_age);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 723;
			Match(T__56);
			State = 724;
			Match(Int);
			State = 726;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 725;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ForcedAgeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public ForcedAgeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_forcedAge; } }
	}

	[RuleVersion(0)]
	public ForcedAgeContext forcedAge() {
		ForcedAgeContext _localctx = new ForcedAgeContext(Context, State);
		EnterRule(_localctx, 120, RULE_forcedAge);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 728;
			Match(T__57);
			State = 729;
			Match(Int);
			State = 731;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 730;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InLoveContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public InLoveContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_inLove; } }
	}

	[RuleVersion(0)]
	public InLoveContext inLove() {
		InLoveContext _localctx = new InLoveContext(Context, State);
		EnterRule(_localctx, 122, RULE_inLove);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 733;
			Match(T__58);
			State = 734;
			Match(Int);
			State = 736;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 735;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LoveCauseContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public LoveCauseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_loveCause; } }
	}

	[RuleVersion(0)]
	public LoveCauseContext loveCause() {
		LoveCauseContext _localctx = new LoveCauseContext(Context, State);
		EnterRule(_localctx, 124, RULE_loveCause);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 738;
			Match(T__59);
			State = 739;
			Match(Int);
			State = 740;
			Match(T__6);
			State = 741;
			Match(Int);
			State = 742;
			Match(T__6);
			State = 743;
			Match(Int);
			State = 744;
			Match(T__6);
			State = 745;
			Match(Int);
			State = 746;
			Match(T__17);
			State = 748;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 747;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CommonTagsForMobsSpawnedInRaidsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CanJoinRaidContext canJoinRaid() {
			return GetRuleContext<CanJoinRaidContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PatrolLeaderContext patrolLeader() {
			return GetRuleContext<PatrolLeaderContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PatrollingContext patrolling() {
			return GetRuleContext<PatrollingContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PatrolTargetContext patrolTarget() {
			return GetRuleContext<PatrolTargetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RaidIdContext raidId() {
			return GetRuleContext<RaidIdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public WaveContext wave() {
			return GetRuleContext<WaveContext>(0);
		}
		public CommonTagsForMobsSpawnedInRaidsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_commonTagsForMobsSpawnedInRaids; } }
	}

	[RuleVersion(0)]
	public CommonTagsForMobsSpawnedInRaidsContext commonTagsForMobsSpawnedInRaids() {
		CommonTagsForMobsSpawnedInRaidsContext _localctx = new CommonTagsForMobsSpawnedInRaidsContext(Context, State);
		EnterRule(_localctx, 126, RULE_commonTagsForMobsSpawnedInRaids);
		try {
			State = 756;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__60:
				EnterOuterAlt(_localctx, 1);
				{
				State = 750;
				canJoinRaid();
				}
				break;
			case T__61:
				EnterOuterAlt(_localctx, 2);
				{
				State = 751;
				patrolLeader();
				}
				break;
			case T__62:
				EnterOuterAlt(_localctx, 3);
				{
				State = 752;
				patrolling();
				}
				break;
			case T__63:
				EnterOuterAlt(_localctx, 4);
				{
				State = 753;
				patrolTarget();
				}
				break;
			case T__64:
				EnterOuterAlt(_localctx, 5);
				{
				State = 754;
				raidId();
				}
				break;
			case T__65:
				EnterOuterAlt(_localctx, 6);
				{
				State = 755;
				wave();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CanJoinRaidContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public CanJoinRaidContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_canJoinRaid; } }
	}

	[RuleVersion(0)]
	public CanJoinRaidContext canJoinRaid() {
		CanJoinRaidContext _localctx = new CanJoinRaidContext(Context, State);
		EnterRule(_localctx, 128, RULE_canJoinRaid);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 758;
			Match(T__60);
			State = 759;
			Match(Bool);
			State = 761;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 760;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PatrolLeaderContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public PatrolLeaderContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_patrolLeader; } }
	}

	[RuleVersion(0)]
	public PatrolLeaderContext patrolLeader() {
		PatrolLeaderContext _localctx = new PatrolLeaderContext(Context, State);
		EnterRule(_localctx, 130, RULE_patrolLeader);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 763;
			Match(T__61);
			State = 764;
			Match(Bool);
			State = 766;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 765;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PatrollingContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public PatrollingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_patrolling; } }
	}

	[RuleVersion(0)]
	public PatrollingContext patrolling() {
		PatrollingContext _localctx = new PatrollingContext(Context, State);
		EnterRule(_localctx, 132, RULE_patrolling);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 768;
			Match(T__62);
			State = 769;
			Match(Bool);
			State = 771;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 770;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PatrolTargetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public PatrolTargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_patrolTarget; } }
	}

	[RuleVersion(0)]
	public PatrolTargetContext patrolTarget() {
		PatrolTargetContext _localctx = new PatrolTargetContext(Context, State);
		EnterRule(_localctx, 134, RULE_patrolTarget);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 773;
			Match(T__63);
			State = 774;
			Match(Int);
			State = 775;
			Match(T__6);
			State = 776;
			Match(Int);
			State = 777;
			Match(T__6);
			State = 778;
			Match(Int);
			State = 779;
			Match(T__17);
			State = 781;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 780;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RaidIdContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public RaidIdContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_raidId; } }
	}

	[RuleVersion(0)]
	public RaidIdContext raidId() {
		RaidIdContext _localctx = new RaidIdContext(Context, State);
		EnterRule(_localctx, 136, RULE_raidId);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 783;
			Match(T__64);
			State = 784;
			Match(Int);
			State = 786;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 785;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class WaveContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public WaveContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_wave; } }
	}

	[RuleVersion(0)]
	public WaveContext wave() {
		WaveContext _localctx = new WaveContext(Context, State);
		EnterRule(_localctx, 138, RULE_wave);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 788;
			Match(T__65);
			State = 789;
			Match(Int);
			State = 791;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 790;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CommonTagsForRideableEntitiesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BredContext bred() {
			return GetRuleContext<BredContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EatingHaystackContext eatingHaystack() {
			return GetRuleContext<EatingHaystackContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public OwnerContext owner() {
			return GetRuleContext<OwnerContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TameContext tame() {
			return GetRuleContext<TameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TemperContext temper() {
			return GetRuleContext<TemperContext>(0);
		}
		public CommonTagsForRideableEntitiesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_commonTagsForRideableEntities; } }
	}

	[RuleVersion(0)]
	public CommonTagsForRideableEntitiesContext commonTagsForRideableEntities() {
		CommonTagsForRideableEntitiesContext _localctx = new CommonTagsForRideableEntitiesContext(Context, State);
		EnterRule(_localctx, 140, RULE_commonTagsForRideableEntities);
		try {
			State = 798;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__66:
				EnterOuterAlt(_localctx, 1);
				{
				State = 793;
				bred();
				}
				break;
			case T__67:
				EnterOuterAlt(_localctx, 2);
				{
				State = 794;
				eatingHaystack();
				}
				break;
			case T__68:
				EnterOuterAlt(_localctx, 3);
				{
				State = 795;
				owner();
				}
				break;
			case T__69:
				EnterOuterAlt(_localctx, 4);
				{
				State = 796;
				tame();
				}
				break;
			case T__70:
				EnterOuterAlt(_localctx, 5);
				{
				State = 797;
				temper();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BredContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public BredContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bred; } }
	}

	[RuleVersion(0)]
	public BredContext bred() {
		BredContext _localctx = new BredContext(Context, State);
		EnterRule(_localctx, 142, RULE_bred);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 800;
			Match(T__66);
			State = 801;
			Match(Bool);
			State = 803;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 802;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EatingHaystackContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public EatingHaystackContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_eatingHaystack; } }
	}

	[RuleVersion(0)]
	public EatingHaystackContext eatingHaystack() {
		EatingHaystackContext _localctx = new EatingHaystackContext(Context, State);
		EnterRule(_localctx, 144, RULE_eatingHaystack);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 805;
			Match(T__67);
			State = 806;
			Match(Bool);
			State = 808;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 807;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class OwnerContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Int() { return GetTokens(commonNBTTreesParser.Int); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int(int i) {
			return GetToken(commonNBTTreesParser.Int, i);
		}
		public OwnerContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_owner; } }
	}

	[RuleVersion(0)]
	public OwnerContext owner() {
		OwnerContext _localctx = new OwnerContext(Context, State);
		EnterRule(_localctx, 146, RULE_owner);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 810;
			Match(T__68);
			State = 811;
			Match(Int);
			State = 812;
			Match(T__6);
			State = 813;
			Match(Int);
			State = 814;
			Match(T__6);
			State = 815;
			Match(Int);
			State = 816;
			Match(T__6);
			State = 817;
			Match(Int);
			State = 818;
			Match(T__17);
			State = 820;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 819;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public TameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tame; } }
	}

	[RuleVersion(0)]
	public TameContext tame() {
		TameContext _localctx = new TameContext(Context, State);
		EnterRule(_localctx, 148, RULE_tame);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 822;
			Match(T__69);
			State = 823;
			Match(Bool);
			State = 825;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 824;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TemperContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public TemperContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_temper; } }
	}

	[RuleVersion(0)]
	public TemperContext temper() {
		TemperContext _localctx = new TemperContext(Context, State);
		EnterRule(_localctx, 150, RULE_temper);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 827;
			Match(T__70);
			State = 828;
			Match(Int);
			State = 830;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 829;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CommonTagsForZombiesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CanBreakDoorsContext canBreakDoors() {
			return GetRuleContext<CanBreakDoorsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DrownedConversionTimeContext drownedConversionTime() {
			return GetRuleContext<DrownedConversionTimeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public InWaterTimeContext inWaterTime() {
			return GetRuleContext<InWaterTimeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IsBabyContext isBaby() {
			return GetRuleContext<IsBabyContext>(0);
		}
		public CommonTagsForZombiesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_commonTagsForZombies; } }
	}

	[RuleVersion(0)]
	public CommonTagsForZombiesContext commonTagsForZombies() {
		CommonTagsForZombiesContext _localctx = new CommonTagsForZombiesContext(Context, State);
		EnterRule(_localctx, 152, RULE_commonTagsForZombies);
		try {
			State = 836;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__71:
				EnterOuterAlt(_localctx, 1);
				{
				State = 832;
				canBreakDoors();
				}
				break;
			case T__72:
				EnterOuterAlt(_localctx, 2);
				{
				State = 833;
				drownedConversionTime();
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 3);
				{
				State = 834;
				inWaterTime();
				}
				break;
			case T__74:
				EnterOuterAlt(_localctx, 4);
				{
				State = 835;
				isBaby();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CanBreakDoorsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public CanBreakDoorsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_canBreakDoors; } }
	}

	[RuleVersion(0)]
	public CanBreakDoorsContext canBreakDoors() {
		CanBreakDoorsContext _localctx = new CanBreakDoorsContext(Context, State);
		EnterRule(_localctx, 154, RULE_canBreakDoors);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 838;
			Match(T__71);
			State = 839;
			Match(Bool);
			State = 841;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 840;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DrownedConversionTimeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public DrownedConversionTimeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_drownedConversionTime; } }
	}

	[RuleVersion(0)]
	public DrownedConversionTimeContext drownedConversionTime() {
		DrownedConversionTimeContext _localctx = new DrownedConversionTimeContext(Context, State);
		EnterRule(_localctx, 156, RULE_drownedConversionTime);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 843;
			Match(T__72);
			State = 844;
			Match(Int);
			State = 846;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 845;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InWaterTimeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public InWaterTimeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_inWaterTime; } }
	}

	[RuleVersion(0)]
	public InWaterTimeContext inWaterTime() {
		InWaterTimeContext _localctx = new InWaterTimeContext(Context, State);
		EnterRule(_localctx, 158, RULE_inWaterTime);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 848;
			Match(T__73);
			State = 849;
			Match(Int);
			State = 851;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 850;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IsBabyContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public IsBabyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_isBaby; } }
	}

	[RuleVersion(0)]
	public IsBabyContext isBaby() {
		IsBabyContext _localctx = new IsBabyContext(Context, State);
		EnterRule(_localctx, 160, RULE_isBaby);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 853;
			Match(T__74);
			State = 854;
			Match(Bool);
			State = 856;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 855;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ContainerEntityCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LootTableContext lootTable() {
			return GetRuleContext<LootTableContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LootTableSeedContext lootTableSeed() {
			return GetRuleContext<LootTableSeedContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ContainerItemsContext containerItems() {
			return GetRuleContext<ContainerItemsContext>(0);
		}
		public ContainerEntityCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_containerEntityCommonTags; } }
	}

	[RuleVersion(0)]
	public ContainerEntityCommonTagsContext containerEntityCommonTags() {
		ContainerEntityCommonTagsContext _localctx = new ContainerEntityCommonTagsContext(Context, State);
		EnterRule(_localctx, 162, RULE_containerEntityCommonTags);
		try {
			State = 861;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__75:
				EnterOuterAlt(_localctx, 1);
				{
				State = 858;
				lootTable();
				}
				break;
			case T__76:
				EnterOuterAlt(_localctx, 2);
				{
				State = 859;
				lootTableSeed();
				}
				break;
			case T__77:
				EnterOuterAlt(_localctx, 3);
				{
				State = 860;
				containerItems();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootTableContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public LootTableContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootTable; } }
	}

	[RuleVersion(0)]
	public LootTableContext lootTable() {
		LootTableContext _localctx = new LootTableContext(Context, State);
		EnterRule(_localctx, 164, RULE_lootTable);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 863;
			Match(T__75);
			State = 864;
			Match(IdString);
			State = 866;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 865;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LootTableSeedContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public LootTableSeedContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lootTableSeed; } }
	}

	[RuleVersion(0)]
	public LootTableSeedContext lootTableSeed() {
		LootTableSeedContext _localctx = new LootTableSeedContext(Context, State);
		EnterRule(_localctx, 166, RULE_lootTableSeed);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 868;
			Match(T__76);
			State = 869;
			Match(Decimal);
			State = 871;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 870;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ContainerItemsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext[] itemCommonTags() {
			return GetRuleContexts<ItemCommonTagsContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext itemCommonTags(int i) {
			return GetRuleContext<ItemCommonTagsContext>(i);
		}
		public ContainerItemsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_containerItems; } }
	}

	[RuleVersion(0)]
	public ContainerItemsContext containerItems() {
		ContainerItemsContext _localctx = new ContainerItemsContext(Context, State);
		EnterRule(_localctx, 168, RULE_containerItems);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 873;
			Match(T__77);
			State = 874;
			itemCommonTags();
			State = 879;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 875;
				Match(T__6);
				State = 877;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__0) {
					{
					State = 876;
					itemCommonTags();
					}
				}

				}
			}

			State = 881;
			Match(T__17);
			State = 883;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 882;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EntityCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AirContext air() {
			return GetRuleContext<AirContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CustomNameContext customName() {
			return GetRuleContext<CustomNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CustomNameVisibleContext customNameVisible() {
			return GetRuleContext<CustomNameVisibleContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FallDistanceContext fallDistance() {
			return GetRuleContext<FallDistanceContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FireContext fire() {
			return GetRuleContext<FireContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public GlowingContext glowing() {
			return GetRuleContext<GlowingContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HasVisualFireContext hasVisualFire() {
			return GetRuleContext<HasVisualFireContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public InvulnerableContext invulnerable() {
			return GetRuleContext<InvulnerableContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public MotionContext motion() {
			return GetRuleContext<MotionContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NoGravityContext noGravity() {
			return GetRuleContext<NoGravityContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PortalCooldownContext portalCooldown() {
			return GetRuleContext<PortalCooldownContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public RotationContext rotation() {
			return GetRuleContext<RotationContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SilentContext silent() {
			return GetRuleContext<SilentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TagsContext tags() {
			return GetRuleContext<TagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TicksFrozenContext ticksFrozen() {
			return GetRuleContext<TicksFrozenContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public UuidContext uuid() {
			return GetRuleContext<UuidContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PassengersContext passengers() {
			return GetRuleContext<PassengersContext>(0);
		}
		public EntityCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_entityCommonTags; } }
	}

	[RuleVersion(0)]
	public EntityCommonTagsContext entityCommonTags() {
		EntityCommonTagsContext _localctx = new EntityCommonTagsContext(Context, State);
		EnterRule(_localctx, 170, RULE_entityCommonTags);
		try {
			State = 902;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__78:
				EnterOuterAlt(_localctx, 1);
				{
				State = 885;
				air();
				}
				break;
			case T__79:
				EnterOuterAlt(_localctx, 2);
				{
				State = 886;
				customName();
				}
				break;
			case T__80:
				EnterOuterAlt(_localctx, 3);
				{
				State = 887;
				customNameVisible();
				}
				break;
			case T__81:
				EnterOuterAlt(_localctx, 4);
				{
				State = 888;
				fallDistance();
				}
				break;
			case T__82:
				EnterOuterAlt(_localctx, 5);
				{
				State = 889;
				fire();
				}
				break;
			case T__83:
				EnterOuterAlt(_localctx, 6);
				{
				State = 890;
				glowing();
				}
				break;
			case T__84:
				EnterOuterAlt(_localctx, 7);
				{
				State = 891;
				hasVisualFire();
				}
				break;
			case T__85:
				EnterOuterAlt(_localctx, 8);
				{
				State = 892;
				invulnerable();
				}
				break;
			case T__86:
				EnterOuterAlt(_localctx, 9);
				{
				State = 893;
				motion();
				}
				break;
			case T__87:
				EnterOuterAlt(_localctx, 10);
				{
				State = 894;
				noGravity();
				}
				break;
			case T__88:
				EnterOuterAlt(_localctx, 11);
				{
				State = 895;
				portalCooldown();
				}
				break;
			case T__89:
				EnterOuterAlt(_localctx, 12);
				{
				State = 896;
				rotation();
				}
				break;
			case T__90:
				EnterOuterAlt(_localctx, 13);
				{
				State = 897;
				silent();
				}
				break;
			case T__91:
				EnterOuterAlt(_localctx, 14);
				{
				State = 898;
				tags();
				}
				break;
			case T__92:
				EnterOuterAlt(_localctx, 15);
				{
				State = 899;
				ticksFrozen();
				}
				break;
			case T__16:
				EnterOuterAlt(_localctx, 16);
				{
				State = 900;
				uuid();
				}
				break;
			case T__93:
				EnterOuterAlt(_localctx, 17);
				{
				State = 901;
				passengers();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AirContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public AirContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_air; } }
	}

	[RuleVersion(0)]
	public AirContext air() {
		AirContext _localctx = new AirContext(Context, State);
		EnterRule(_localctx, 172, RULE_air);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 904;
			Match(T__78);
			State = 905;
			Match(Decimal);
			State = 907;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 906;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CustomNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public CustomNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_customName; } }
	}

	[RuleVersion(0)]
	public CustomNameContext customName() {
		CustomNameContext _localctx = new CustomNameContext(Context, State);
		EnterRule(_localctx, 174, RULE_customName);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 909;
			Match(T__79);
			State = 910;
			Match(IdString);
			State = 912;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 911;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CustomNameVisibleContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public CustomNameVisibleContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_customNameVisible; } }
	}

	[RuleVersion(0)]
	public CustomNameVisibleContext customNameVisible() {
		CustomNameVisibleContext _localctx = new CustomNameVisibleContext(Context, State);
		EnterRule(_localctx, 176, RULE_customNameVisible);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 914;
			Match(T__80);
			State = 915;
			Match(Bool);
			State = 917;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 916;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FallDistanceContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public FallDistanceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fallDistance; } }
	}

	[RuleVersion(0)]
	public FallDistanceContext fallDistance() {
		FallDistanceContext _localctx = new FallDistanceContext(Context, State);
		EnterRule(_localctx, 178, RULE_fallDistance);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 919;
			Match(T__81);
			State = 920;
			Match(Decimal);
			State = 922;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 921;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FireContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public FireContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fire; } }
	}

	[RuleVersion(0)]
	public FireContext fire() {
		FireContext _localctx = new FireContext(Context, State);
		EnterRule(_localctx, 180, RULE_fire);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 924;
			Match(T__82);
			State = 925;
			Match(Decimal);
			State = 927;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 926;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class GlowingContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public GlowingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_glowing; } }
	}

	[RuleVersion(0)]
	public GlowingContext glowing() {
		GlowingContext _localctx = new GlowingContext(Context, State);
		EnterRule(_localctx, 182, RULE_glowing);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 929;
			Match(T__83);
			State = 930;
			Match(Bool);
			State = 932;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 931;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HasVisualFireContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public HasVisualFireContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hasVisualFire; } }
	}

	[RuleVersion(0)]
	public HasVisualFireContext hasVisualFire() {
		HasVisualFireContext _localctx = new HasVisualFireContext(Context, State);
		EnterRule(_localctx, 184, RULE_hasVisualFire);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 934;
			Match(T__84);
			State = 935;
			Match(Bool);
			State = 937;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 936;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InvulnerableContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public InvulnerableContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_invulnerable; } }
	}

	[RuleVersion(0)]
	public InvulnerableContext invulnerable() {
		InvulnerableContext _localctx = new InvulnerableContext(Context, State);
		EnterRule(_localctx, 186, RULE_invulnerable);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 939;
			Match(T__85);
			State = 940;
			Match(Bool);
			State = 942;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 941;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MotionContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Decimal() { return GetTokens(commonNBTTreesParser.Decimal); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal(int i) {
			return GetToken(commonNBTTreesParser.Decimal, i);
		}
		public MotionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_motion; } }
	}

	[RuleVersion(0)]
	public MotionContext motion() {
		MotionContext _localctx = new MotionContext(Context, State);
		EnterRule(_localctx, 188, RULE_motion);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 944;
			Match(T__86);
			State = 945;
			Match(Decimal);
			State = 946;
			Match(T__6);
			State = 947;
			Match(Decimal);
			State = 948;
			Match(T__6);
			State = 949;
			Match(Decimal);
			State = 950;
			Match(T__17);
			State = 952;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 951;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class NoGravityContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public NoGravityContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_noGravity; } }
	}

	[RuleVersion(0)]
	public NoGravityContext noGravity() {
		NoGravityContext _localctx = new NoGravityContext(Context, State);
		EnterRule(_localctx, 190, RULE_noGravity);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 954;
			Match(T__87);
			State = 955;
			Match(Bool);
			State = 957;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 956;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PortalCooldownContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public PortalCooldownContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_portalCooldown; } }
	}

	[RuleVersion(0)]
	public PortalCooldownContext portalCooldown() {
		PortalCooldownContext _localctx = new PortalCooldownContext(Context, State);
		EnterRule(_localctx, 192, RULE_portalCooldown);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 959;
			Match(T__88);
			State = 960;
			Match(Int);
			State = 962;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 961;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class RotationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Decimal() { return GetTokens(commonNBTTreesParser.Decimal); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal(int i) {
			return GetToken(commonNBTTreesParser.Decimal, i);
		}
		public RotationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_rotation; } }
	}

	[RuleVersion(0)]
	public RotationContext rotation() {
		RotationContext _localctx = new RotationContext(Context, State);
		EnterRule(_localctx, 194, RULE_rotation);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 964;
			Match(T__89);
			State = 965;
			Match(Decimal);
			State = 966;
			Match(T__6);
			State = 967;
			Match(Decimal);
			State = 968;
			Match(T__17);
			State = 970;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 969;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SilentContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public SilentContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_silent; } }
	}

	[RuleVersion(0)]
	public SilentContext silent() {
		SilentContext _localctx = new SilentContext(Context, State);
		EnterRule(_localctx, 196, RULE_silent);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 972;
			Match(T__90);
			State = 973;
			Match(Bool);
			State = 975;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 974;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ContentContext[] content() {
			return GetRuleContexts<ContentContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ContentContext content(int i) {
			return GetRuleContext<ContentContext>(i);
		}
		public TagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tags; } }
	}

	[RuleVersion(0)]
	public TagsContext tags() {
		TagsContext _localctx = new TagsContext(Context, State);
		EnterRule(_localctx, 198, RULE_tags);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 977;
			Match(T__91);
			State = 978;
			content();
			State = 983;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 979;
				Match(T__6);
				State = 981;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==Any) {
					{
					State = 980;
					content();
					}
				}

				}
			}

			State = 985;
			Match(T__17);
			State = 987;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 986;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TicksFrozenContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public TicksFrozenContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_ticksFrozen; } }
	}

	[RuleVersion(0)]
	public TicksFrozenContext ticksFrozen() {
		TicksFrozenContext _localctx = new TicksFrozenContext(Context, State);
		EnterRule(_localctx, 200, RULE_ticksFrozen);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 989;
			Match(T__92);
			State = 990;
			Match(Int);
			State = 992;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 991;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PassengersContext : ParserRuleContext {
		public PassengersContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_passengers; } }
	}

	[RuleVersion(0)]
	public PassengersContext passengers() {
		PassengersContext _localctx = new PassengersContext(Context, State);
		EnterRule(_localctx, 202, RULE_passengers);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 994;
			Match(T__93);
			State = 995;
			Match(T__17);
			State = 997;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 996;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EntityDataContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public IdContext id() {
			return GetRuleContext<IdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AngryCreatureExtraFieldContext angryCreatureExtraField() {
			return GetRuleContext<AngryCreatureExtraFieldContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ArrowProjectileCommonTagsContext arrowProjectileCommonTags() {
			return GetRuleContext<ArrowProjectileCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BreedableMobExtraFieldsContext breedableMobExtraFields() {
			return GetRuleContext<BreedableMobExtraFieldsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommonTagsForMobsSpawnedInRaidsContext commonTagsForMobsSpawnedInRaids() {
			return GetRuleContext<CommonTagsForMobsSpawnedInRaidsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommonTagsForRideableEntitiesContext commonTagsForRideableEntities() {
			return GetRuleContext<CommonTagsForRideableEntitiesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CommonTagsForZombiesContext commonTagsForZombies() {
			return GetRuleContext<CommonTagsForZombiesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ContainerEntityCommonTagsContext containerEntityCommonTags() {
			return GetRuleContext<ContainerEntityCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EntityCommonTagsContext entityCommonTags() {
			return GetRuleContext<EntityCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FireballProjectileCommonTagsContext fireballProjectileCommonTags() {
			return GetRuleContext<FireballProjectileCommonTagsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemProjectileCommonTagsContext itemProjectileCommonTags() {
			return GetRuleContext<ItemProjectileCommonTagsContext>(0);
		}
		public EntityDataContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_entityData; } }
	}

	[RuleVersion(0)]
	public EntityDataContext entityData() {
		EntityDataContext _localctx = new EntityDataContext(Context, State);
		EnterRule(_localctx, 204, RULE_entityData);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 999;
			Match(T__0);
			State = 1000;
			id();
			State = 1002;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1001;
				Match(T__6);
				}
			}

			State = 1015;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,113,Context) ) {
			case 1:
				{
				State = 1004;
				angryCreatureExtraField();
				}
				break;
			case 2:
				{
				State = 1005;
				arrowProjectileCommonTags();
				}
				break;
			case 3:
				{
				State = 1006;
				breedableMobExtraFields();
				}
				break;
			case 4:
				{
				State = 1007;
				commonTagsForMobsSpawnedInRaids();
				}
				break;
			case 5:
				{
				State = 1008;
				commonTagsForRideableEntities();
				}
				break;
			case 6:
				{
				State = 1009;
				commonTagsForZombies();
				}
				break;
			case 7:
				{
				State = 1010;
				containerEntityCommonTags();
				}
				break;
			case 8:
				{
				State = 1011;
				entityCommonTags();
				}
				break;
			case 9:
				{
				State = 1012;
				fireballProjectileCommonTags();
				}
				break;
			case 10:
				{
				State = 1013;
				itemProjectileCommonTags();
				}
				break;
			case 11:
				{
				}
				break;
			}
			State = 1017;
			Match(T__1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FireballProjectileCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public PowerContext power() {
			return GetRuleContext<PowerContext>(0);
		}
		public FireballProjectileCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fireballProjectileCommonTags; } }
	}

	[RuleVersion(0)]
	public FireballProjectileCommonTagsContext fireballProjectileCommonTags() {
		FireballProjectileCommonTagsContext _localctx = new FireballProjectileCommonTagsContext(Context, State);
		EnterRule(_localctx, 206, RULE_fireballProjectileCommonTags);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1019;
			power();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PowerContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Decimal() { return GetTokens(commonNBTTreesParser.Decimal); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal(int i) {
			return GetToken(commonNBTTreesParser.Decimal, i);
		}
		public PowerContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_power; } }
	}

	[RuleVersion(0)]
	public PowerContext power() {
		PowerContext _localctx = new PowerContext(Context, State);
		EnterRule(_localctx, 208, RULE_power);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1021;
			Match(T__94);
			State = 1022;
			Match(Decimal);
			State = 1023;
			Match(T__6);
			State = 1024;
			Match(Decimal);
			State = 1025;
			Match(T__6);
			State = 1026;
			Match(Decimal);
			State = 1027;
			Match(T__17);
			State = 1029;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1028;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemProjectileCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemProjectileItemContext itemProjectileItem() {
			return GetRuleContext<ItemProjectileItemContext>(0);
		}
		public ItemProjectileCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemProjectileCommonTags; } }
	}

	[RuleVersion(0)]
	public ItemProjectileCommonTagsContext itemProjectileCommonTags() {
		ItemProjectileCommonTagsContext _localctx = new ItemProjectileCommonTagsContext(Context, State);
		EnterRule(_localctx, 210, RULE_itemProjectileCommonTags);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1031;
			itemProjectileItem();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ItemProjectileItemContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext[] itemCommonTags() {
			return GetRuleContexts<ItemCommonTagsContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext itemCommonTags(int i) {
			return GetRuleContext<ItemCommonTagsContext>(i);
		}
		public ItemProjectileItemContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_itemProjectileItem; } }
	}

	[RuleVersion(0)]
	public ItemProjectileItemContext itemProjectileItem() {
		ItemProjectileItemContext _localctx = new ItemProjectileItemContext(Context, State);
		EnterRule(_localctx, 212, RULE_itemProjectileItem);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1033;
			Match(T__77);
			State = 1034;
			itemCommonTags();
			State = 1039;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1035;
				Match(T__6);
				State = 1037;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__0) {
					{
					State = 1036;
					itemCommonTags();
					}
				}

				}
			}

			State = 1041;
			Match(T__17);
			State = 1043;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1042;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AbsorptionAmountContext absorptionAmount() {
			return GetRuleContext<AbsorptionAmountContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DeathTimeContext deathTime() {
			return GetRuleContext<DeathTimeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FallFlyingContext fallFlying() {
			return GetRuleContext<FallFlyingContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HealthContext health() {
			return GetRuleContext<HealthContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HurtByTimestampContext hurtByTimestamp() {
			return GetRuleContext<HurtByTimestampContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HurtTimeContext hurtTime() {
			return GetRuleContext<HurtTimeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SleepingXContext sleepingX() {
			return GetRuleContext<SleepingXContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SleepingYContext sleepingY() {
			return GetRuleContext<SleepingYContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SleepingZContext sleepingZ() {
			return GetRuleContext<SleepingZContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyAttributesContext livingBodyAttributes() {
			return GetRuleContext<LivingBodyAttributesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyActiveEffectsContext livingBodyActiveEffects() {
			return GetRuleContext<LivingBodyActiveEffectsContext>(0);
		}
		public LivingBodyCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyCommonTags; } }
	}

	[RuleVersion(0)]
	public LivingBodyCommonTagsContext livingBodyCommonTags() {
		LivingBodyCommonTagsContext _localctx = new LivingBodyCommonTagsContext(Context, State);
		EnterRule(_localctx, 214, RULE_livingBodyCommonTags);
		try {
			State = 1056;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__95:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1045;
				absorptionAmount();
				}
				break;
			case T__96:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1046;
				deathTime();
				}
				break;
			case T__97:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1047;
				fallFlying();
				}
				break;
			case T__98:
				EnterOuterAlt(_localctx, 4);
				{
				State = 1048;
				health();
				}
				break;
			case T__99:
				EnterOuterAlt(_localctx, 5);
				{
				State = 1049;
				hurtByTimestamp();
				}
				break;
			case T__100:
				EnterOuterAlt(_localctx, 6);
				{
				State = 1050;
				hurtTime();
				}
				break;
			case T__101:
				EnterOuterAlt(_localctx, 7);
				{
				State = 1051;
				sleepingX();
				}
				break;
			case T__102:
				EnterOuterAlt(_localctx, 8);
				{
				State = 1052;
				sleepingY();
				}
				break;
			case T__103:
				EnterOuterAlt(_localctx, 9);
				{
				State = 1053;
				sleepingZ();
				}
				break;
			case T__104:
				EnterOuterAlt(_localctx, 10);
				{
				State = 1054;
				livingBodyAttributes();
				}
				break;
			case T__108:
				EnterOuterAlt(_localctx, 11);
				{
				State = 1055;
				livingBodyActiveEffects();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AbsorptionAmountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public AbsorptionAmountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_absorptionAmount; } }
	}

	[RuleVersion(0)]
	public AbsorptionAmountContext absorptionAmount() {
		AbsorptionAmountContext _localctx = new AbsorptionAmountContext(Context, State);
		EnterRule(_localctx, 216, RULE_absorptionAmount);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1058;
			Match(T__95);
			State = 1059;
			Match(Decimal);
			State = 1061;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1060;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DeathTimeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public DeathTimeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_deathTime; } }
	}

	[RuleVersion(0)]
	public DeathTimeContext deathTime() {
		DeathTimeContext _localctx = new DeathTimeContext(Context, State);
		EnterRule(_localctx, 218, RULE_deathTime);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1063;
			Match(T__96);
			State = 1064;
			Match(Decimal);
			State = 1066;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1065;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FallFlyingContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public FallFlyingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_fallFlying; } }
	}

	[RuleVersion(0)]
	public FallFlyingContext fallFlying() {
		FallFlyingContext _localctx = new FallFlyingContext(Context, State);
		EnterRule(_localctx, 220, RULE_fallFlying);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1068;
			Match(T__97);
			State = 1069;
			Match(Bool);
			State = 1071;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1070;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HealthContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public HealthContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_health; } }
	}

	[RuleVersion(0)]
	public HealthContext health() {
		HealthContext _localctx = new HealthContext(Context, State);
		EnterRule(_localctx, 222, RULE_health);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1073;
			Match(T__98);
			State = 1074;
			Match(Decimal);
			State = 1076;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1075;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HurtByTimestampContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public HurtByTimestampContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hurtByTimestamp; } }
	}

	[RuleVersion(0)]
	public HurtByTimestampContext hurtByTimestamp() {
		HurtByTimestampContext _localctx = new HurtByTimestampContext(Context, State);
		EnterRule(_localctx, 224, RULE_hurtByTimestamp);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1078;
			Match(T__99);
			State = 1079;
			Match(Int);
			State = 1081;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1080;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HurtTimeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public HurtTimeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hurtTime; } }
	}

	[RuleVersion(0)]
	public HurtTimeContext hurtTime() {
		HurtTimeContext _localctx = new HurtTimeContext(Context, State);
		EnterRule(_localctx, 226, RULE_hurtTime);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1083;
			Match(T__100);
			State = 1084;
			Match(Decimal);
			State = 1086;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1085;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SleepingXContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public SleepingXContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_sleepingX; } }
	}

	[RuleVersion(0)]
	public SleepingXContext sleepingX() {
		SleepingXContext _localctx = new SleepingXContext(Context, State);
		EnterRule(_localctx, 228, RULE_sleepingX);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1088;
			Match(T__101);
			State = 1089;
			Match(Int);
			State = 1091;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1090;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SleepingYContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public SleepingYContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_sleepingY; } }
	}

	[RuleVersion(0)]
	public SleepingYContext sleepingY() {
		SleepingYContext _localctx = new SleepingYContext(Context, State);
		EnterRule(_localctx, 230, RULE_sleepingY);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1093;
			Match(T__102);
			State = 1094;
			Match(Int);
			State = 1096;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1095;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SleepingZContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public SleepingZContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_sleepingZ; } }
	}

	[RuleVersion(0)]
	public SleepingZContext sleepingZ() {
		SleepingZContext _localctx = new SleepingZContext(Context, State);
		EnterRule(_localctx, 232, RULE_sleepingZ);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1098;
			Match(T__103);
			State = 1099;
			Match(Int);
			State = 1101;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1100;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyAttributesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyAttributeContext[] livingBodyAttribute() {
			return GetRuleContexts<LivingBodyAttributeContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyAttributeContext livingBodyAttribute(int i) {
			return GetRuleContext<LivingBodyAttributeContext>(i);
		}
		public LivingBodyAttributesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyAttributes; } }
	}

	[RuleVersion(0)]
	public LivingBodyAttributesContext livingBodyAttributes() {
		LivingBodyAttributesContext _localctx = new LivingBodyAttributesContext(Context, State);
		EnterRule(_localctx, 234, RULE_livingBodyAttributes);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1103;
			Match(T__104);
			State = 1104;
			livingBodyAttribute();
			State = 1109;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1105;
				Match(T__6);
				State = 1107;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__0 || _la==T__8 || _la==T__106) {
					{
					State = 1106;
					livingBodyAttribute();
					}
				}

				}
			}

			State = 1111;
			Match(T__17);
			State = 1113;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1112;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyAttributeContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BaseContext @base() {
			return GetRuleContext<BaseContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyModifiersContext livingBodyModifiers() {
			return GetRuleContext<LivingBodyModifiersContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyNameContext livingBodyName() {
			return GetRuleContext<LivingBodyNameContext>(0);
		}
		public LivingBodyAttributeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyAttribute; } }
	}

	[RuleVersion(0)]
	public LivingBodyAttributeContext livingBodyAttribute() {
		LivingBodyAttributeContext _localctx = new LivingBodyAttributeContext(Context, State);
		EnterRule(_localctx, 236, RULE_livingBodyAttribute);
		try {
			State = 1121;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__0:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1115;
				Match(T__0);
				State = 1116;
				@base();
				}
				break;
			case T__106:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1117;
				livingBodyModifiers();
				}
				break;
			case T__8:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1118;
				livingBodyName();
				State = 1119;
				Match(T__1);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BaseContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public BaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_base; } }
	}

	[RuleVersion(0)]
	public BaseContext @base() {
		BaseContext _localctx = new BaseContext(Context, State);
		EnterRule(_localctx, 238, RULE_base);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1123;
			Match(T__105);
			State = 1124;
			Match(Decimal);
			State = 1126;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,132,Context) ) {
			case 1:
				{
				State = 1125;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyModifiersContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyModifyContext[] livingBodyModify() {
			return GetRuleContexts<LivingBodyModifyContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyModifyContext livingBodyModify(int i) {
			return GetRuleContext<LivingBodyModifyContext>(i);
		}
		public LivingBodyModifiersContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyModifiers; } }
	}

	[RuleVersion(0)]
	public LivingBodyModifiersContext livingBodyModifiers() {
		LivingBodyModifiersContext _localctx = new LivingBodyModifiersContext(Context, State);
		EnterRule(_localctx, 240, RULE_livingBodyModifiers);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1128;
			Match(T__106);
			State = 1129;
			livingBodyModify();
			State = 1134;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1130;
				Match(T__6);
				State = 1132;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if ((((_la) & ~0x3f) == 0 && ((1L << _la) & 132608L) != 0) || _la==T__107) {
					{
					State = 1131;
					livingBodyModify();
					}
				}

				}
			}

			State = 1136;
			Match(T__17);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyModifyContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyAmountContext livingBodyAmount() {
			return GetRuleContext<LivingBodyAmountContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyModifyNameContext livingBodyModifyName() {
			return GetRuleContext<LivingBodyModifyNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyOperationContext livingBodyOperation() {
			return GetRuleContext<LivingBodyOperationContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public UuidContext uuid() {
			return GetRuleContext<UuidContext>(0);
		}
		public LivingBodyModifyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyModify; } }
	}

	[RuleVersion(0)]
	public LivingBodyModifyContext livingBodyModify() {
		LivingBodyModifyContext _localctx = new LivingBodyModifyContext(Context, State);
		EnterRule(_localctx, 242, RULE_livingBodyModify);
		try {
			State = 1142;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__107:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1138;
				livingBodyAmount();
				}
				break;
			case T__8:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1139;
				livingBodyModifyName();
				}
				break;
			case T__9:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1140;
				livingBodyOperation();
				}
				break;
			case T__16:
				EnterOuterAlt(_localctx, 4);
				{
				State = 1141;
				uuid();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyAmountContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public LivingBodyAmountContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyAmount; } }
	}

	[RuleVersion(0)]
	public LivingBodyAmountContext livingBodyAmount() {
		LivingBodyAmountContext _localctx = new LivingBodyAmountContext(Context, State);
		EnterRule(_localctx, 244, RULE_livingBodyAmount);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1144;
			Match(T__107);
			State = 1145;
			Match(Decimal);
			State = 1147;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,136,Context) ) {
			case 1:
				{
				State = 1146;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyModifyNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public LivingBodyModifyNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyModifyName; } }
	}

	[RuleVersion(0)]
	public LivingBodyModifyNameContext livingBodyModifyName() {
		LivingBodyModifyNameContext _localctx = new LivingBodyModifyNameContext(Context, State);
		EnterRule(_localctx, 246, RULE_livingBodyModifyName);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1149;
			Match(T__8);
			State = 1150;
			Match(IdString);
			State = 1152;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,137,Context) ) {
			case 1:
				{
				State = 1151;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyOperationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public LivingBodyOperationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyOperation; } }
	}

	[RuleVersion(0)]
	public LivingBodyOperationContext livingBodyOperation() {
		LivingBodyOperationContext _localctx = new LivingBodyOperationContext(Context, State);
		EnterRule(_localctx, 248, RULE_livingBodyOperation);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1154;
			Match(T__9);
			State = 1155;
			Match(Int);
			State = 1157;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,138,Context) ) {
			case 1:
				{
				State = 1156;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyNameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public LivingBodyNameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyName; } }
	}

	[RuleVersion(0)]
	public LivingBodyNameContext livingBodyName() {
		LivingBodyNameContext _localctx = new LivingBodyNameContext(Context, State);
		EnterRule(_localctx, 250, RULE_livingBodyName);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1159;
			Match(T__8);
			State = 1160;
			Match(IdString);
			State = 1162;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1161;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyActiveEffectsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyActiveEffectContext[] livingBodyActiveEffect() {
			return GetRuleContexts<LivingBodyActiveEffectContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public LivingBodyActiveEffectContext livingBodyActiveEffect(int i) {
			return GetRuleContext<LivingBodyActiveEffectContext>(i);
		}
		public LivingBodyActiveEffectsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyActiveEffects; } }
	}

	[RuleVersion(0)]
	public LivingBodyActiveEffectsContext livingBodyActiveEffects() {
		LivingBodyActiveEffectsContext _localctx = new LivingBodyActiveEffectsContext(Context, State);
		EnterRule(_localctx, 252, RULE_livingBodyActiveEffects);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1164;
			Match(T__108);
			State = 1165;
			livingBodyActiveEffect();
			State = 1170;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1166;
				Match(T__6);
				State = 1168;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__3 || ((((_la - 110)) & ~0x3f) == 0 && ((1L << (_la - 110)) & 4095L) != 0)) {
					{
					State = 1167;
					livingBodyActiveEffect();
					}
				}

				}
			}

			State = 1172;
			Match(T__17);
			State = 1174;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1173;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LivingBodyActiveEffectContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public AmbientContext ambient() {
			return GetRuleContext<AmbientContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public AmplifierContext amplifier() {
			return GetRuleContext<AmplifierContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DurationContext duration() {
			return GetRuleContext<DurationContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Factor_calculation_dataContext factor_calculation_data() {
			return GetRuleContext<Factor_calculation_dataContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public IdContext id() {
			return GetRuleContext<IdContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Show_iconContext show_icon() {
			return GetRuleContext<Show_iconContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Show_particlesContext show_particles() {
			return GetRuleContext<Show_particlesContext>(0);
		}
		public LivingBodyActiveEffectContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_livingBodyActiveEffect; } }
	}

	[RuleVersion(0)]
	public LivingBodyActiveEffectContext livingBodyActiveEffect() {
		LivingBodyActiveEffectContext _localctx = new LivingBodyActiveEffectContext(Context, State);
		EnterRule(_localctx, 254, RULE_livingBodyActiveEffect);
		try {
			State = 1183;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__109:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1176;
				ambient();
				}
				break;
			case T__110:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1177;
				amplifier();
				}
				break;
			case T__111:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1178;
				duration();
				}
				break;
			case T__112:
			case T__113:
			case T__114:
			case T__115:
			case T__116:
			case T__117:
			case T__118:
				EnterOuterAlt(_localctx, 4);
				{
				State = 1179;
				factor_calculation_data();
				}
				break;
			case T__3:
				EnterOuterAlt(_localctx, 5);
				{
				State = 1180;
				id();
				}
				break;
			case T__119:
				EnterOuterAlt(_localctx, 6);
				{
				State = 1181;
				show_icon();
				}
				break;
			case T__120:
				EnterOuterAlt(_localctx, 7);
				{
				State = 1182;
				show_particles();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AmbientContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public AmbientContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_ambient; } }
	}

	[RuleVersion(0)]
	public AmbientContext ambient() {
		AmbientContext _localctx = new AmbientContext(Context, State);
		EnterRule(_localctx, 256, RULE_ambient);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1185;
			Match(T__109);
			State = 1186;
			Match(Bool);
			State = 1188;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,144,Context) ) {
			case 1:
				{
				State = 1187;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AmplifierContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Byte() { return GetToken(commonNBTTreesParser.Byte, 0); }
		public AmplifierContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_amplifier; } }
	}

	[RuleVersion(0)]
	public AmplifierContext amplifier() {
		AmplifierContext _localctx = new AmplifierContext(Context, State);
		EnterRule(_localctx, 258, RULE_amplifier);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1190;
			Match(T__110);
			State = 1191;
			Match(Byte);
			State = 1193;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,145,Context) ) {
			case 1:
				{
				State = 1192;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DurationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public DurationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_duration; } }
	}

	[RuleVersion(0)]
	public DurationContext duration() {
		DurationContext _localctx = new DurationContext(Context, State);
		EnterRule(_localctx, 260, RULE_duration);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1195;
			Match(T__111);
			State = 1196;
			Match(Int);
			State = 1198;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,146,Context) ) {
			case 1:
				{
				State = 1197;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Factor_calculation_dataContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public Effect_changed_timestampContext effect_changed_timestamp() {
			return GetRuleContext<Effect_changed_timestampContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Factor_currentContext factor_current() {
			return GetRuleContext<Factor_currentContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Factor_previous_frameContext factor_previous_frame() {
			return GetRuleContext<Factor_previous_frameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Factor_startContext factor_start() {
			return GetRuleContext<Factor_startContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Factor_targetContext factor_target() {
			return GetRuleContext<Factor_targetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Had_effect_last_tickContext had_effect_last_tick() {
			return GetRuleContext<Had_effect_last_tickContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Padding_durationContext padding_duration() {
			return GetRuleContext<Padding_durationContext>(0);
		}
		public Factor_calculation_dataContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_factor_calculation_data; } }
	}

	[RuleVersion(0)]
	public Factor_calculation_dataContext factor_calculation_data() {
		Factor_calculation_dataContext _localctx = new Factor_calculation_dataContext(Context, State);
		EnterRule(_localctx, 262, RULE_factor_calculation_data);
		try {
			State = 1207;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__112:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1200;
				effect_changed_timestamp();
				}
				break;
			case T__113:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1201;
				factor_current();
				}
				break;
			case T__114:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1202;
				factor_previous_frame();
				}
				break;
			case T__115:
				EnterOuterAlt(_localctx, 4);
				{
				State = 1203;
				factor_start();
				}
				break;
			case T__116:
				EnterOuterAlt(_localctx, 5);
				{
				State = 1204;
				factor_target();
				}
				break;
			case T__117:
				EnterOuterAlt(_localctx, 6);
				{
				State = 1205;
				had_effect_last_tick();
				}
				break;
			case T__118:
				EnterOuterAlt(_localctx, 7);
				{
				State = 1206;
				padding_duration();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Effect_changed_timestampContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public Effect_changed_timestampContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_effect_changed_timestamp; } }
	}

	[RuleVersion(0)]
	public Effect_changed_timestampContext effect_changed_timestamp() {
		Effect_changed_timestampContext _localctx = new Effect_changed_timestampContext(Context, State);
		EnterRule(_localctx, 264, RULE_effect_changed_timestamp);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1209;
			Match(T__112);
			State = 1210;
			Match(Int);
			State = 1212;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,148,Context) ) {
			case 1:
				{
				State = 1211;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Factor_currentContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public Factor_currentContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_factor_current; } }
	}

	[RuleVersion(0)]
	public Factor_currentContext factor_current() {
		Factor_currentContext _localctx = new Factor_currentContext(Context, State);
		EnterRule(_localctx, 266, RULE_factor_current);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1214;
			Match(T__113);
			State = 1215;
			Match(Decimal);
			State = 1217;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,149,Context) ) {
			case 1:
				{
				State = 1216;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Factor_previous_frameContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public Factor_previous_frameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_factor_previous_frame; } }
	}

	[RuleVersion(0)]
	public Factor_previous_frameContext factor_previous_frame() {
		Factor_previous_frameContext _localctx = new Factor_previous_frameContext(Context, State);
		EnterRule(_localctx, 268, RULE_factor_previous_frame);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1219;
			Match(T__114);
			State = 1220;
			Match(Decimal);
			State = 1222;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,150,Context) ) {
			case 1:
				{
				State = 1221;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Factor_startContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public Factor_startContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_factor_start; } }
	}

	[RuleVersion(0)]
	public Factor_startContext factor_start() {
		Factor_startContext _localctx = new Factor_startContext(Context, State);
		EnterRule(_localctx, 270, RULE_factor_start);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1224;
			Match(T__115);
			State = 1225;
			Match(Decimal);
			State = 1227;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,151,Context) ) {
			case 1:
				{
				State = 1226;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Factor_targetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public Factor_targetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_factor_target; } }
	}

	[RuleVersion(0)]
	public Factor_targetContext factor_target() {
		Factor_targetContext _localctx = new Factor_targetContext(Context, State);
		EnterRule(_localctx, 272, RULE_factor_target);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1229;
			Match(T__116);
			State = 1230;
			Match(Decimal);
			State = 1232;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,152,Context) ) {
			case 1:
				{
				State = 1231;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Had_effect_last_tickContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public Had_effect_last_tickContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_had_effect_last_tick; } }
	}

	[RuleVersion(0)]
	public Had_effect_last_tickContext had_effect_last_tick() {
		Had_effect_last_tickContext _localctx = new Had_effect_last_tickContext(Context, State);
		EnterRule(_localctx, 274, RULE_had_effect_last_tick);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1234;
			Match(T__117);
			State = 1235;
			Match(Bool);
			State = 1237;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,153,Context) ) {
			case 1:
				{
				State = 1236;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Padding_durationContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public Padding_durationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_padding_duration; } }
	}

	[RuleVersion(0)]
	public Padding_durationContext padding_duration() {
		Padding_durationContext _localctx = new Padding_durationContext(Context, State);
		EnterRule(_localctx, 276, RULE_padding_duration);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1239;
			Match(T__118);
			State = 1240;
			Match(Int);
			State = 1242;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,154,Context) ) {
			case 1:
				{
				State = 1241;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Show_iconContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public Show_iconContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_show_icon; } }
	}

	[RuleVersion(0)]
	public Show_iconContext show_icon() {
		Show_iconContext _localctx = new Show_iconContext(Context, State);
		EnterRule(_localctx, 278, RULE_show_icon);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1244;
			Match(T__119);
			State = 1245;
			Match(Bool);
			State = 1247;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,155,Context) ) {
			case 1:
				{
				State = 1246;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Show_particlesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public Show_particlesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_show_particles; } }
	}

	[RuleVersion(0)]
	public Show_particlesContext show_particles() {
		Show_particlesContext _localctx = new Show_particlesContext(Context, State);
		EnterRule(_localctx, 280, RULE_show_particles);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1249;
			Match(T__120);
			State = 1250;
			Match(Bool);
			State = 1252;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,156,Context) ) {
			case 1:
				{
				State = 1251;
				Match(T__6);
				}
				break;
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MineCartCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CustomDisplayTileContext customDisplayTile() {
			return GetRuleContext<CustomDisplayTileContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DisplayOffsetContext displayOffset() {
			return GetRuleContext<DisplayOffsetContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DisplayStateContext displayState() {
			return GetRuleContext<DisplayStateContext>(0);
		}
		public MineCartCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_mineCartCommonTags; } }
	}

	[RuleVersion(0)]
	public MineCartCommonTagsContext mineCartCommonTags() {
		MineCartCommonTagsContext _localctx = new MineCartCommonTagsContext(Context, State);
		EnterRule(_localctx, 282, RULE_mineCartCommonTags);
		try {
			State = 1257;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__121:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1254;
				customDisplayTile();
				}
				break;
			case T__122:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1255;
				displayOffset();
				}
				break;
			case T__55:
			case T__123:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1256;
				displayState();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CustomDisplayTileContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public CustomDisplayTileContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_customDisplayTile; } }
	}

	[RuleVersion(0)]
	public CustomDisplayTileContext customDisplayTile() {
		CustomDisplayTileContext _localctx = new CustomDisplayTileContext(Context, State);
		EnterRule(_localctx, 284, RULE_customDisplayTile);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1259;
			Match(T__121);
			State = 1260;
			Match(Bool);
			State = 1262;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1261;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DisplayOffsetContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Int() { return GetToken(commonNBTTreesParser.Int, 0); }
		public DisplayOffsetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_displayOffset; } }
	}

	[RuleVersion(0)]
	public DisplayOffsetContext displayOffset() {
		DisplayOffsetContext _localctx = new DisplayOffsetContext(Context, State);
		EnterRule(_localctx, 286, RULE_displayOffset);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1264;
			Match(T__122);
			State = 1265;
			Match(Int);
			State = 1267;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1266;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DisplayStateContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public BlockStateNameContext blockStateName() {
			return GetRuleContext<BlockStateNameContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BlockStatePropertiesContext blockStateProperties() {
			return GetRuleContext<BlockStatePropertiesContext>(0);
		}
		public DisplayStateContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_displayState; } }
	}

	[RuleVersion(0)]
	public DisplayStateContext displayState() {
		DisplayStateContext _localctx = new DisplayStateContext(Context, State);
		EnterRule(_localctx, 288, RULE_displayState);
		int _la;
		try {
			State = 1276;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__123:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1269;
				Match(T__123);
				State = 1270;
				blockStateName();
				}
				break;
			case T__55:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1271;
				blockStateProperties();
				State = 1272;
				Match(T__1);
				State = 1274;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__6) {
					{
					State = 1273;
					Match(T__6);
					}
				}

				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class MobCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public CanPickUpLootContext canPickUpLoot() {
			return GetRuleContext<CanPickUpLootContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DeathLootTableContext deathLootTable() {
			return GetRuleContext<DeathLootTableContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DeathLootTableSeedContext deathLootTableSeed() {
			return GetRuleContext<DeathLootTableSeedContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LeftHandedContext leftHanded() {
			return GetRuleContext<LeftHandedContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public NoAIContext noAI() {
			return GetRuleContext<NoAIContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PersistenceRequiredContext persistenceRequired() {
			return GetRuleContext<PersistenceRequiredContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LeashContext leash() {
			return GetRuleContext<LeashContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ArmorItemsContext armorItems() {
			return GetRuleContext<ArmorItemsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ArmorDropChancesContext armorDropChances() {
			return GetRuleContext<ArmorDropChancesContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HandItemsContext handItems() {
			return GetRuleContext<HandItemsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public HandDropChancesContext handDropChances() {
			return GetRuleContext<HandDropChancesContext>(0);
		}
		public MobCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_mobCommonTags; } }
	}

	[RuleVersion(0)]
	public MobCommonTagsContext mobCommonTags() {
		MobCommonTagsContext _localctx = new MobCommonTagsContext(Context, State);
		EnterRule(_localctx, 290, RULE_mobCommonTags);
		try {
			State = 1289;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__124:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1278;
				canPickUpLoot();
				}
				break;
			case T__125:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1279;
				deathLootTable();
				}
				break;
			case T__126:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1280;
				deathLootTableSeed();
				}
				break;
			case T__127:
				EnterOuterAlt(_localctx, 4);
				{
				State = 1281;
				leftHanded();
				}
				break;
			case T__128:
				EnterOuterAlt(_localctx, 5);
				{
				State = 1282;
				noAI();
				}
				break;
			case T__129:
				EnterOuterAlt(_localctx, 6);
				{
				State = 1283;
				persistenceRequired();
				}
				break;
			case Eof:
				EnterOuterAlt(_localctx, 7);
				{
				State = 1284;
				leash();
				}
				break;
			case T__130:
				EnterOuterAlt(_localctx, 8);
				{
				State = 1285;
				armorItems();
				}
				break;
			case T__131:
				EnterOuterAlt(_localctx, 9);
				{
				State = 1286;
				armorDropChances();
				}
				break;
			case T__132:
				EnterOuterAlt(_localctx, 10);
				{
				State = 1287;
				handItems();
				}
				break;
			case T__133:
				EnterOuterAlt(_localctx, 11);
				{
				State = 1288;
				handDropChances();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CanPickUpLootContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public CanPickUpLootContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_canPickUpLoot; } }
	}

	[RuleVersion(0)]
	public CanPickUpLootContext canPickUpLoot() {
		CanPickUpLootContext _localctx = new CanPickUpLootContext(Context, State);
		EnterRule(_localctx, 292, RULE_canPickUpLoot);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1291;
			Match(T__124);
			State = 1292;
			Match(Bool);
			State = 1294;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1293;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DeathLootTableContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode IdString() { return GetToken(commonNBTTreesParser.IdString, 0); }
		public DeathLootTableContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_deathLootTable; } }
	}

	[RuleVersion(0)]
	public DeathLootTableContext deathLootTable() {
		DeathLootTableContext _localctx = new DeathLootTableContext(Context, State);
		EnterRule(_localctx, 294, RULE_deathLootTable);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1296;
			Match(T__125);
			State = 1297;
			Match(IdString);
			State = 1299;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1298;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DeathLootTableSeedContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal() { return GetToken(commonNBTTreesParser.Decimal, 0); }
		public DeathLootTableSeedContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_deathLootTableSeed; } }
	}

	[RuleVersion(0)]
	public DeathLootTableSeedContext deathLootTableSeed() {
		DeathLootTableSeedContext _localctx = new DeathLootTableSeedContext(Context, State);
		EnterRule(_localctx, 296, RULE_deathLootTableSeed);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1301;
			Match(T__126);
			State = 1302;
			Match(Decimal);
			State = 1304;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1303;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LeftHandedContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public LeftHandedContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_leftHanded; } }
	}

	[RuleVersion(0)]
	public LeftHandedContext leftHanded() {
		LeftHandedContext _localctx = new LeftHandedContext(Context, State);
		EnterRule(_localctx, 298, RULE_leftHanded);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1306;
			Match(T__127);
			State = 1307;
			Match(Bool);
			State = 1309;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1308;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class NoAIContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public NoAIContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_noAI; } }
	}

	[RuleVersion(0)]
	public NoAIContext noAI() {
		NoAIContext _localctx = new NoAIContext(Context, State);
		EnterRule(_localctx, 300, RULE_noAI);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1311;
			Match(T__128);
			State = 1312;
			Match(Bool);
			State = 1314;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1313;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PersistenceRequiredContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public PersistenceRequiredContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_persistenceRequired; } }
	}

	[RuleVersion(0)]
	public PersistenceRequiredContext persistenceRequired() {
		PersistenceRequiredContext _localctx = new PersistenceRequiredContext(Context, State);
		EnterRule(_localctx, 302, RULE_persistenceRequired);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1316;
			Match(T__129);
			State = 1317;
			Match(Bool);
			State = 1319;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1318;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LeashContext : ParserRuleContext {
		public LeashContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_leash; } }
	}

	[RuleVersion(0)]
	public LeashContext leash() {
		LeashContext _localctx = new LeashContext(Context, State);
		EnterRule(_localctx, 304, RULE_leash);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ArmorItemsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext[] itemCommonTags() {
			return GetRuleContexts<ItemCommonTagsContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext itemCommonTags(int i) {
			return GetRuleContext<ItemCommonTagsContext>(i);
		}
		public ArmorItemsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_armorItems; } }
	}

	[RuleVersion(0)]
	public ArmorItemsContext armorItems() {
		ArmorItemsContext _localctx = new ArmorItemsContext(Context, State);
		EnterRule(_localctx, 306, RULE_armorItems);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1323;
			Match(T__130);
			State = 1324;
			itemCommonTags();
			State = 1329;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1325;
				Match(T__6);
				State = 1327;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__0) {
					{
					State = 1326;
					itemCommonTags();
					}
				}

				}
			}

			State = 1331;
			Match(T__17);
			State = 1333;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1332;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ArmorDropChancesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Decimal() { return GetTokens(commonNBTTreesParser.Decimal); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal(int i) {
			return GetToken(commonNBTTreesParser.Decimal, i);
		}
		public ArmorDropChancesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_armorDropChances; } }
	}

	[RuleVersion(0)]
	public ArmorDropChancesContext armorDropChances() {
		ArmorDropChancesContext _localctx = new ArmorDropChancesContext(Context, State);
		EnterRule(_localctx, 308, RULE_armorDropChances);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1335;
			Match(T__131);
			State = 1336;
			Match(Decimal);
			State = 1337;
			Match(T__6);
			State = 1338;
			Match(Decimal);
			State = 1339;
			Match(T__6);
			State = 1340;
			Match(Decimal);
			State = 1341;
			Match(T__6);
			State = 1342;
			Match(Decimal);
			State = 1343;
			Match(T__17);
			State = 1345;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1344;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HandItemsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext[] itemCommonTags() {
			return GetRuleContexts<ItemCommonTagsContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ItemCommonTagsContext itemCommonTags(int i) {
			return GetRuleContext<ItemCommonTagsContext>(i);
		}
		public HandItemsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_handItems; } }
	}

	[RuleVersion(0)]
	public HandItemsContext handItems() {
		HandItemsContext _localctx = new HandItemsContext(Context, State);
		EnterRule(_localctx, 310, RULE_handItems);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1347;
			Match(T__132);
			State = 1348;
			itemCommonTags();
			State = 1353;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1349;
				Match(T__6);
				State = 1351;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__0) {
					{
					State = 1350;
					itemCommonTags();
					}
				}

				}
			}

			State = 1355;
			Match(T__17);
			State = 1357;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1356;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HandDropChancesContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Decimal() { return GetTokens(commonNBTTreesParser.Decimal); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Decimal(int i) {
			return GetToken(commonNBTTreesParser.Decimal, i);
		}
		public HandDropChancesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_handDropChances; } }
	}

	[RuleVersion(0)]
	public HandDropChancesContext handDropChances() {
		HandDropChancesContext _localctx = new HandDropChancesContext(Context, State);
		EnterRule(_localctx, 312, RULE_handDropChances);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1359;
			Match(T__133);
			State = 1360;
			Match(Decimal);
			State = 1361;
			Match(T__6);
			State = 1362;
			Match(Decimal);
			State = 1363;
			Match(T__6);
			State = 1364;
			Match(Decimal);
			State = 1365;
			Match(T__6);
			State = 1366;
			Match(Decimal);
			State = 1367;
			Match(T__17);
			State = 1369;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1368;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ProjectileCommonTagsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public HasBeenShotContext hasBeenShot() {
			return GetRuleContext<HasBeenShotContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LeftOwnerContext leftOwner() {
			return GetRuleContext<LeftOwnerContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public OwnerContext owner() {
			return GetRuleContext<OwnerContext>(0);
		}
		public ProjectileCommonTagsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_projectileCommonTags; } }
	}

	[RuleVersion(0)]
	public ProjectileCommonTagsContext projectileCommonTags() {
		ProjectileCommonTagsContext _localctx = new ProjectileCommonTagsContext(Context, State);
		EnterRule(_localctx, 314, RULE_projectileCommonTags);
		try {
			State = 1374;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__134:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1371;
				hasBeenShot();
				}
				break;
			case T__135:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1372;
				leftOwner();
				}
				break;
			case T__68:
				EnterOuterAlt(_localctx, 3);
				{
				State = 1373;
				owner();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class HasBeenShotContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public HasBeenShotContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_hasBeenShot; } }
	}

	[RuleVersion(0)]
	public HasBeenShotContext hasBeenShot() {
		HasBeenShotContext _localctx = new HasBeenShotContext(Context, State);
		EnterRule(_localctx, 316, RULE_hasBeenShot);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1376;
			Match(T__134);
			State = 1377;
			Match(Bool);
			State = 1379;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1378;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LeftOwnerContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public LeftOwnerContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_leftOwner; } }
	}

	[RuleVersion(0)]
	public LeftOwnerContext leftOwner() {
		LeftOwnerContext _localctx = new LeftOwnerContext(Context, State);
		EnterRule(_localctx, 318, RULE_leftOwner);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1381;
			Match(T__135);
			State = 1382;
			Match(Bool);
			State = 1384;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1383;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TameableMobExtraFieldsContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public OwnerContext owner() {
			return GetRuleContext<OwnerContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public SittingContext sitting() {
			return GetRuleContext<SittingContext>(0);
		}
		public TameableMobExtraFieldsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tameableMobExtraFields; } }
	}

	[RuleVersion(0)]
	public TameableMobExtraFieldsContext tameableMobExtraFields() {
		TameableMobExtraFieldsContext _localctx = new TameableMobExtraFieldsContext(Context, State);
		EnterRule(_localctx, 320, RULE_tameableMobExtraFields);
		try {
			State = 1388;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__68:
				EnterOuterAlt(_localctx, 1);
				{
				State = 1386;
				owner();
				}
				break;
			case T__136:
				EnterOuterAlt(_localctx, 2);
				{
				State = 1387;
				sitting();
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SittingContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Bool() { return GetToken(commonNBTTreesParser.Bool, 0); }
		public SittingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_sitting; } }
	}

	[RuleVersion(0)]
	public SittingContext sitting() {
		SittingContext _localctx = new SittingContext(Context, State);
		EnterRule(_localctx, 322, RULE_sitting);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 1390;
			Match(T__136);
			State = 1391;
			Match(Bool);
			State = 1393;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==T__6) {
				{
				State = 1392;
				Match(T__6);
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	private static int[] _serializedATN = {
		4,1,145,1396,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,
		7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,
		2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,
		2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,
		2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,
		2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,
		2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,
		2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,
		2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,
		2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,
		2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,
		2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
		2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,
		2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,
		2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,
		2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,
		2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,
		2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,
		2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,7,128,
		2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,
		2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,
		2,141,7,141,2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,2,146,7,146,
		2,147,7,147,2,148,7,148,2,149,7,149,2,150,7,150,2,151,7,151,2,152,7,152,
		2,153,7,153,2,154,7,154,2,155,7,155,2,156,7,156,2,157,7,157,2,158,7,158,
		2,159,7,159,2,160,7,160,2,161,7,161,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,343,8,1,1,2,1,2,1,2,1,2,1,2,
		3,2,350,8,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,
		6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,374,8,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,
		1,8,3,8,384,8,8,1,9,1,9,1,9,3,9,389,8,9,1,10,1,10,1,10,3,10,394,8,10,1,
		11,1,11,1,11,3,11,399,8,11,1,12,1,12,1,12,3,12,404,8,12,1,13,1,13,1,13,
		3,13,409,8,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,421,
		8,14,1,15,1,15,1,15,3,15,426,8,15,5,15,428,8,15,10,15,12,15,431,9,15,1,
		15,1,15,3,15,435,8,15,1,16,1,16,3,16,439,8,16,1,17,1,17,1,17,3,17,444,
		8,17,1,18,1,18,1,18,3,18,449,8,18,1,19,1,19,3,19,453,8,19,1,19,3,19,456,
		8,19,1,19,3,19,459,8,19,1,19,1,19,3,19,463,8,19,1,20,1,20,1,20,3,20,468,
		8,20,1,21,1,21,1,21,1,21,1,21,3,21,475,8,21,5,21,477,8,21,10,21,12,21,
		480,9,21,3,21,482,8,21,1,21,1,21,3,21,486,8,21,1,22,1,22,1,22,1,22,1,22,
		1,22,1,23,1,23,1,23,1,23,3,23,498,8,23,3,23,500,8,23,1,23,1,23,3,23,504,
		8,23,1,24,1,24,1,24,3,24,509,8,24,1,24,1,24,3,24,513,8,24,1,24,1,24,3,
		24,517,8,24,3,24,519,8,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,3,26,528,
		8,26,1,27,1,27,1,27,3,27,533,8,27,1,28,1,28,3,28,537,8,28,1,29,1,29,1,
		29,3,29,542,8,29,1,30,1,30,1,30,3,30,547,8,30,1,31,1,31,1,31,3,31,552,
		8,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,563,8,32,1,33,1,
		33,1,33,3,33,568,8,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
		3,34,580,8,34,1,35,1,35,1,35,3,35,585,8,35,1,36,1,36,1,36,3,36,590,8,36,
		1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,600,8,37,1,38,1,38,1,38,3,
		38,605,8,38,1,39,1,39,1,39,3,39,610,8,39,1,40,1,40,1,40,1,40,1,40,1,40,
		1,40,1,40,3,40,620,8,40,1,41,1,41,1,41,3,41,625,8,41,1,42,1,42,1,42,1,
		42,1,42,1,42,1,42,1,42,1,42,1,42,3,42,637,8,42,1,43,1,43,1,43,3,43,642,
		8,43,1,44,1,44,1,44,3,44,647,8,44,1,45,1,45,1,45,3,45,652,8,45,1,46,1,
		46,1,46,3,46,657,8,46,1,47,1,47,1,47,3,47,662,8,47,1,48,1,48,1,48,3,48,
		667,8,48,1,49,1,49,1,49,3,49,672,8,49,1,50,1,50,1,50,3,50,677,8,50,1,51,
		1,51,1,51,3,51,682,8,51,1,52,1,52,1,52,1,52,1,52,3,52,689,8,52,3,52,691,
		8,52,1,53,1,53,1,53,3,53,696,8,53,1,54,1,54,1,54,1,54,3,54,702,8,54,3,
		54,704,8,54,1,54,1,54,3,54,708,8,54,1,55,1,55,1,55,1,55,1,56,1,56,1,57,
		1,57,1,58,1,58,1,58,1,58,3,58,722,8,58,1,59,1,59,1,59,3,59,727,8,59,1,
		60,1,60,1,60,3,60,732,8,60,1,61,1,61,1,61,3,61,737,8,61,1,62,1,62,1,62,
		1,62,1,62,1,62,1,62,1,62,1,62,1,62,3,62,749,8,62,1,63,1,63,1,63,1,63,1,
		63,1,63,3,63,757,8,63,1,64,1,64,1,64,3,64,762,8,64,1,65,1,65,1,65,3,65,
		767,8,65,1,66,1,66,1,66,3,66,772,8,66,1,67,1,67,1,67,1,67,1,67,1,67,1,
		67,1,67,3,67,782,8,67,1,68,1,68,1,68,3,68,787,8,68,1,69,1,69,1,69,3,69,
		792,8,69,1,70,1,70,1,70,1,70,1,70,3,70,799,8,70,1,71,1,71,1,71,3,71,804,
		8,71,1,72,1,72,1,72,3,72,809,8,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,
		73,1,73,1,73,3,73,821,8,73,1,74,1,74,1,74,3,74,826,8,74,1,75,1,75,1,75,
		3,75,831,8,75,1,76,1,76,1,76,1,76,3,76,837,8,76,1,77,1,77,1,77,3,77,842,
		8,77,1,78,1,78,1,78,3,78,847,8,78,1,79,1,79,1,79,3,79,852,8,79,1,80,1,
		80,1,80,3,80,857,8,80,1,81,1,81,1,81,3,81,862,8,81,1,82,1,82,1,82,3,82,
		867,8,82,1,83,1,83,1,83,3,83,872,8,83,1,84,1,84,1,84,1,84,3,84,878,8,84,
		3,84,880,8,84,1,84,1,84,3,84,884,8,84,1,85,1,85,1,85,1,85,1,85,1,85,1,
		85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,3,85,903,8,85,1,86,
		1,86,1,86,3,86,908,8,86,1,87,1,87,1,87,3,87,913,8,87,1,88,1,88,1,88,3,
		88,918,8,88,1,89,1,89,1,89,3,89,923,8,89,1,90,1,90,1,90,3,90,928,8,90,
		1,91,1,91,1,91,3,91,933,8,91,1,92,1,92,1,92,3,92,938,8,92,1,93,1,93,1,
		93,3,93,943,8,93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,3,94,953,8,94,
		1,95,1,95,1,95,3,95,958,8,95,1,96,1,96,1,96,3,96,963,8,96,1,97,1,97,1,
		97,1,97,1,97,1,97,3,97,971,8,97,1,98,1,98,1,98,3,98,976,8,98,1,99,1,99,
		1,99,1,99,3,99,982,8,99,3,99,984,8,99,1,99,1,99,3,99,988,8,99,1,100,1,
		100,1,100,3,100,993,8,100,1,101,1,101,1,101,3,101,998,8,101,1,102,1,102,
		1,102,3,102,1003,8,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,
		1,102,1,102,1,102,3,102,1016,8,102,1,102,1,102,1,103,1,103,1,104,1,104,
		1,104,1,104,1,104,1,104,1,104,1,104,3,104,1030,8,104,1,105,1,105,1,106,
		1,106,1,106,1,106,3,106,1038,8,106,3,106,1040,8,106,1,106,1,106,3,106,
		1044,8,106,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,
		1,107,3,107,1057,8,107,1,108,1,108,1,108,3,108,1062,8,108,1,109,1,109,
		1,109,3,109,1067,8,109,1,110,1,110,1,110,3,110,1072,8,110,1,111,1,111,
		1,111,3,111,1077,8,111,1,112,1,112,1,112,3,112,1082,8,112,1,113,1,113,
		1,113,3,113,1087,8,113,1,114,1,114,1,114,3,114,1092,8,114,1,115,1,115,
		1,115,3,115,1097,8,115,1,116,1,116,1,116,3,116,1102,8,116,1,117,1,117,
		1,117,1,117,3,117,1108,8,117,3,117,1110,8,117,1,117,1,117,3,117,1114,8,
		117,1,118,1,118,1,118,1,118,1,118,1,118,3,118,1122,8,118,1,119,1,119,1,
		119,3,119,1127,8,119,1,120,1,120,1,120,1,120,3,120,1133,8,120,3,120,1135,
		8,120,1,120,1,120,1,121,1,121,1,121,1,121,3,121,1143,8,121,1,122,1,122,
		1,122,3,122,1148,8,122,1,123,1,123,1,123,3,123,1153,8,123,1,124,1,124,
		1,124,3,124,1158,8,124,1,125,1,125,1,125,3,125,1163,8,125,1,126,1,126,
		1,126,1,126,3,126,1169,8,126,3,126,1171,8,126,1,126,1,126,3,126,1175,8,
		126,1,127,1,127,1,127,1,127,1,127,1,127,1,127,3,127,1184,8,127,1,128,1,
		128,1,128,3,128,1189,8,128,1,129,1,129,1,129,3,129,1194,8,129,1,130,1,
		130,1,130,3,130,1199,8,130,1,131,1,131,1,131,1,131,1,131,1,131,1,131,3,
		131,1208,8,131,1,132,1,132,1,132,3,132,1213,8,132,1,133,1,133,1,133,3,
		133,1218,8,133,1,134,1,134,1,134,3,134,1223,8,134,1,135,1,135,1,135,3,
		135,1228,8,135,1,136,1,136,1,136,3,136,1233,8,136,1,137,1,137,1,137,3,
		137,1238,8,137,1,138,1,138,1,138,3,138,1243,8,138,1,139,1,139,1,139,3,
		139,1248,8,139,1,140,1,140,1,140,3,140,1253,8,140,1,141,1,141,1,141,3,
		141,1258,8,141,1,142,1,142,1,142,3,142,1263,8,142,1,143,1,143,1,143,3,
		143,1268,8,143,1,144,1,144,1,144,1,144,1,144,3,144,1275,8,144,3,144,1277,
		8,144,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,1,145,
		3,145,1290,8,145,1,146,1,146,1,146,3,146,1295,8,146,1,147,1,147,1,147,
		3,147,1300,8,147,1,148,1,148,1,148,3,148,1305,8,148,1,149,1,149,1,149,
		3,149,1310,8,149,1,150,1,150,1,150,3,150,1315,8,150,1,151,1,151,1,151,
		3,151,1320,8,151,1,152,1,152,1,153,1,153,1,153,1,153,3,153,1328,8,153,
		3,153,1330,8,153,1,153,1,153,3,153,1334,8,153,1,154,1,154,1,154,1,154,
		1,154,1,154,1,154,1,154,1,154,1,154,3,154,1346,8,154,1,155,1,155,1,155,
		1,155,3,155,1352,8,155,3,155,1354,8,155,1,155,1,155,3,155,1358,8,155,1,
		156,1,156,1,156,1,156,1,156,1,156,1,156,1,156,1,156,1,156,3,156,1370,8,
		156,1,157,1,157,1,157,3,157,1375,8,157,1,158,1,158,1,158,3,158,1380,8,
		158,1,159,1,159,1,159,3,159,1385,8,159,1,160,1,160,3,160,1389,8,160,1,
		161,1,161,1,161,3,161,1394,8,161,1,161,2,429,478,0,162,0,2,4,6,8,10,12,
		14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,
		62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,
		108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,
		144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,
		180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,
		216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,
		252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,
		288,290,292,294,296,298,300,302,304,306,308,310,312,314,316,318,320,322,
		0,1,1,0,11,16,1528,0,324,1,0,0,0,2,342,1,0,0,0,4,344,1,0,0,0,6,353,1,0,
		0,0,8,356,1,0,0,0,10,359,1,0,0,0,12,373,1,0,0,0,14,375,1,0,0,0,16,383,
		1,0,0,0,18,385,1,0,0,0,20,390,1,0,0,0,22,395,1,0,0,0,24,400,1,0,0,0,26,
		405,1,0,0,0,28,410,1,0,0,0,30,422,1,0,0,0,32,436,1,0,0,0,34,440,1,0,0,
		0,36,445,1,0,0,0,38,450,1,0,0,0,40,464,1,0,0,0,42,469,1,0,0,0,44,487,1,
		0,0,0,46,493,1,0,0,0,48,518,1,0,0,0,50,520,1,0,0,0,52,524,1,0,0,0,54,529,
		1,0,0,0,56,536,1,0,0,0,58,538,1,0,0,0,60,543,1,0,0,0,62,548,1,0,0,0,64,
		562,1,0,0,0,66,564,1,0,0,0,68,569,1,0,0,0,70,581,1,0,0,0,72,586,1,0,0,
		0,74,591,1,0,0,0,76,601,1,0,0,0,78,606,1,0,0,0,80,611,1,0,0,0,82,621,1,
		0,0,0,84,636,1,0,0,0,86,638,1,0,0,0,88,643,1,0,0,0,90,648,1,0,0,0,92,653,
		1,0,0,0,94,658,1,0,0,0,96,663,1,0,0,0,98,668,1,0,0,0,100,673,1,0,0,0,102,
		678,1,0,0,0,104,690,1,0,0,0,106,692,1,0,0,0,108,697,1,0,0,0,110,709,1,
		0,0,0,112,713,1,0,0,0,114,715,1,0,0,0,116,721,1,0,0,0,118,723,1,0,0,0,
		120,728,1,0,0,0,122,733,1,0,0,0,124,738,1,0,0,0,126,756,1,0,0,0,128,758,
		1,0,0,0,130,763,1,0,0,0,132,768,1,0,0,0,134,773,1,0,0,0,136,783,1,0,0,
		0,138,788,1,0,0,0,140,798,1,0,0,0,142,800,1,0,0,0,144,805,1,0,0,0,146,
		810,1,0,0,0,148,822,1,0,0,0,150,827,1,0,0,0,152,836,1,0,0,0,154,838,1,
		0,0,0,156,843,1,0,0,0,158,848,1,0,0,0,160,853,1,0,0,0,162,861,1,0,0,0,
		164,863,1,0,0,0,166,868,1,0,0,0,168,873,1,0,0,0,170,902,1,0,0,0,172,904,
		1,0,0,0,174,909,1,0,0,0,176,914,1,0,0,0,178,919,1,0,0,0,180,924,1,0,0,
		0,182,929,1,0,0,0,184,934,1,0,0,0,186,939,1,0,0,0,188,944,1,0,0,0,190,
		954,1,0,0,0,192,959,1,0,0,0,194,964,1,0,0,0,196,972,1,0,0,0,198,977,1,
		0,0,0,200,989,1,0,0,0,202,994,1,0,0,0,204,999,1,0,0,0,206,1019,1,0,0,0,
		208,1021,1,0,0,0,210,1031,1,0,0,0,212,1033,1,0,0,0,214,1056,1,0,0,0,216,
		1058,1,0,0,0,218,1063,1,0,0,0,220,1068,1,0,0,0,222,1073,1,0,0,0,224,1078,
		1,0,0,0,226,1083,1,0,0,0,228,1088,1,0,0,0,230,1093,1,0,0,0,232,1098,1,
		0,0,0,234,1103,1,0,0,0,236,1121,1,0,0,0,238,1123,1,0,0,0,240,1128,1,0,
		0,0,242,1142,1,0,0,0,244,1144,1,0,0,0,246,1149,1,0,0,0,248,1154,1,0,0,
		0,250,1159,1,0,0,0,252,1164,1,0,0,0,254,1183,1,0,0,0,256,1185,1,0,0,0,
		258,1190,1,0,0,0,260,1195,1,0,0,0,262,1207,1,0,0,0,264,1209,1,0,0,0,266,
		1214,1,0,0,0,268,1219,1,0,0,0,270,1224,1,0,0,0,272,1229,1,0,0,0,274,1234,
		1,0,0,0,276,1239,1,0,0,0,278,1244,1,0,0,0,280,1249,1,0,0,0,282,1257,1,
		0,0,0,284,1259,1,0,0,0,286,1264,1,0,0,0,288,1276,1,0,0,0,290,1289,1,0,
		0,0,292,1291,1,0,0,0,294,1296,1,0,0,0,296,1301,1,0,0,0,298,1306,1,0,0,
		0,300,1311,1,0,0,0,302,1316,1,0,0,0,304,1321,1,0,0,0,306,1323,1,0,0,0,
		308,1335,1,0,0,0,310,1347,1,0,0,0,312,1359,1,0,0,0,314,1374,1,0,0,0,316,
		1376,1,0,0,0,318,1381,1,0,0,0,320,1388,1,0,0,0,322,1390,1,0,0,0,324,325,
		5,143,0,0,325,1,1,0,0,0,326,343,3,4,2,0,327,343,3,64,32,0,328,343,3,84,
		42,0,329,343,3,116,58,0,330,343,3,126,63,0,331,343,3,140,70,0,332,343,
		3,152,76,0,333,343,3,162,81,0,334,343,3,170,85,0,335,343,3,206,103,0,336,
		343,3,210,105,0,337,343,3,214,107,0,338,343,3,282,141,0,339,343,3,290,
		145,0,340,343,3,314,157,0,341,343,3,320,160,0,342,326,1,0,0,0,342,327,
		1,0,0,0,342,328,1,0,0,0,342,329,1,0,0,0,342,330,1,0,0,0,342,331,1,0,0,
		0,342,332,1,0,0,0,342,333,1,0,0,0,342,334,1,0,0,0,342,335,1,0,0,0,342,
		336,1,0,0,0,342,337,1,0,0,0,342,338,1,0,0,0,342,339,1,0,0,0,342,340,1,
		0,0,0,342,341,1,0,0,0,343,3,1,0,0,0,344,349,5,1,0,0,345,350,3,6,3,0,346,
		350,3,8,4,0,347,350,3,12,6,0,348,350,3,10,5,0,349,345,1,0,0,0,349,346,
		1,0,0,0,349,347,1,0,0,0,349,348,1,0,0,0,350,351,1,0,0,0,351,352,5,2,0,
		0,352,5,1,0,0,0,353,354,5,3,0,0,354,355,5,140,0,0,355,7,1,0,0,0,356,357,
		5,4,0,0,357,358,5,142,0,0,358,9,1,0,0,0,359,360,5,5,0,0,360,361,5,139,
		0,0,361,11,1,0,0,0,362,374,3,14,7,0,363,374,3,30,15,0,364,374,3,32,16,
		0,365,374,3,34,17,0,366,374,3,36,18,0,367,374,3,38,19,0,368,374,3,46,23,
		0,369,374,3,52,26,0,370,374,3,54,27,0,371,374,3,56,28,0,372,374,3,62,31,
		0,373,362,1,0,0,0,373,363,1,0,0,0,373,364,1,0,0,0,373,365,1,0,0,0,373,
		366,1,0,0,0,373,367,1,0,0,0,373,368,1,0,0,0,373,369,1,0,0,0,373,370,1,
		0,0,0,373,371,1,0,0,0,373,372,1,0,0,0,374,13,1,0,0,0,375,376,3,16,8,0,
		376,15,1,0,0,0,377,384,3,18,9,0,378,384,3,20,10,0,379,384,3,22,11,0,380,
		384,3,24,12,0,381,384,3,26,13,0,382,384,3,28,14,0,383,377,1,0,0,0,383,
		378,1,0,0,0,383,379,1,0,0,0,383,380,1,0,0,0,383,381,1,0,0,0,383,382,1,
		0,0,0,384,17,1,0,0,0,385,386,5,6,0,0,386,388,5,141,0,0,387,389,5,7,0,0,
		388,387,1,0,0,0,388,389,1,0,0,0,389,19,1,0,0,0,390,391,5,8,0,0,391,393,
		5,142,0,0,392,394,5,7,0,0,393,392,1,0,0,0,393,394,1,0,0,0,394,21,1,0,0,
		0,395,396,5,9,0,0,396,398,5,142,0,0,397,399,5,7,0,0,398,397,1,0,0,0,398,
		399,1,0,0,0,399,23,1,0,0,0,400,401,5,10,0,0,401,403,5,140,0,0,402,404,
		5,7,0,0,403,402,1,0,0,0,403,404,1,0,0,0,404,25,1,0,0,0,405,406,5,5,0,0,
		406,408,7,0,0,0,407,409,5,7,0,0,408,407,1,0,0,0,408,409,1,0,0,0,409,27,
		1,0,0,0,410,411,5,17,0,0,411,412,5,140,0,0,412,413,5,7,0,0,413,414,5,140,
		0,0,414,415,5,7,0,0,415,416,5,140,0,0,416,417,5,7,0,0,417,418,5,140,0,
		0,418,420,5,18,0,0,419,421,5,7,0,0,420,419,1,0,0,0,420,421,1,0,0,0,421,
		29,1,0,0,0,422,429,5,19,0,0,423,425,5,142,0,0,424,426,5,7,0,0,425,424,
		1,0,0,0,425,426,1,0,0,0,426,428,1,0,0,0,427,423,1,0,0,0,428,431,1,0,0,
		0,429,430,1,0,0,0,429,427,1,0,0,0,430,432,1,0,0,0,431,429,1,0,0,0,432,
		434,5,18,0,0,433,435,5,7,0,0,434,433,1,0,0,0,434,435,1,0,0,0,435,31,1,
		0,0,0,436,438,5,20,0,0,437,439,5,7,0,0,438,437,1,0,0,0,438,439,1,0,0,0,
		439,33,1,0,0,0,440,441,5,21,0,0,441,443,5,140,0,0,442,444,5,7,0,0,443,
		442,1,0,0,0,443,444,1,0,0,0,444,35,1,0,0,0,445,446,5,22,0,0,446,448,5,
		140,0,0,447,449,5,7,0,0,448,447,1,0,0,0,448,449,1,0,0,0,449,37,1,0,0,0,
		450,452,5,23,0,0,451,453,3,40,20,0,452,451,1,0,0,0,452,453,1,0,0,0,453,
		455,1,0,0,0,454,456,3,42,21,0,455,454,1,0,0,0,455,456,1,0,0,0,456,458,
		1,0,0,0,457,459,3,22,11,0,458,457,1,0,0,0,458,459,1,0,0,0,459,460,1,0,
		0,0,460,462,5,2,0,0,461,463,5,7,0,0,462,461,1,0,0,0,462,463,1,0,0,0,463,
		39,1,0,0,0,464,465,5,24,0,0,465,467,5,140,0,0,466,468,5,7,0,0,467,466,
		1,0,0,0,467,468,1,0,0,0,468,41,1,0,0,0,469,481,5,25,0,0,470,482,3,0,0,
		0,471,478,3,44,22,0,472,474,5,7,0,0,473,475,3,44,22,0,474,473,1,0,0,0,
		474,475,1,0,0,0,475,477,1,0,0,0,476,472,1,0,0,0,477,480,1,0,0,0,478,479,
		1,0,0,0,478,476,1,0,0,0,479,482,1,0,0,0,480,478,1,0,0,0,481,470,1,0,0,
		0,481,471,1,0,0,0,482,483,1,0,0,0,483,485,5,18,0,0,484,486,5,7,0,0,485,
		484,1,0,0,0,485,486,1,0,0,0,486,43,1,0,0,0,487,488,5,26,0,0,488,489,5,
		144,0,0,489,490,5,27,0,0,490,491,5,145,0,0,491,492,5,28,0,0,492,45,1,0,
		0,0,493,494,5,29,0,0,494,499,3,48,24,0,495,497,5,7,0,0,496,498,3,48,24,
		0,497,496,1,0,0,0,497,498,1,0,0,0,498,500,1,0,0,0,499,495,1,0,0,0,499,
		500,1,0,0,0,500,501,1,0,0,0,501,503,5,18,0,0,502,504,5,7,0,0,503,502,1,
		0,0,0,503,504,1,0,0,0,504,47,1,0,0,0,505,506,5,1,0,0,506,508,3,8,4,0,507,
		509,5,7,0,0,508,507,1,0,0,0,508,509,1,0,0,0,509,519,1,0,0,0,510,512,3,
		50,25,0,511,513,5,7,0,0,512,511,1,0,0,0,512,513,1,0,0,0,513,514,1,0,0,
		0,514,516,5,2,0,0,515,517,5,7,0,0,516,515,1,0,0,0,516,517,1,0,0,0,517,
		519,1,0,0,0,518,505,1,0,0,0,518,510,1,0,0,0,519,49,1,0,0,0,520,521,5,30,
		0,0,521,522,5,141,0,0,522,523,5,31,0,0,523,51,1,0,0,0,524,525,5,32,0,0,
		525,527,5,140,0,0,526,528,5,7,0,0,527,526,1,0,0,0,527,528,1,0,0,0,528,
		53,1,0,0,0,529,530,5,33,0,0,530,532,5,140,0,0,531,533,5,7,0,0,532,531,
		1,0,0,0,532,533,1,0,0,0,533,55,1,0,0,0,534,537,3,58,29,0,535,537,3,60,
		30,0,536,534,1,0,0,0,536,535,1,0,0,0,537,57,1,0,0,0,538,539,5,34,0,0,539,
		541,5,142,0,0,540,542,5,7,0,0,541,540,1,0,0,0,541,542,1,0,0,0,542,59,1,
		0,0,0,543,544,5,35,0,0,544,546,5,142,0,0,545,547,5,7,0,0,546,545,1,0,0,
		0,546,547,1,0,0,0,547,61,1,0,0,0,548,549,5,36,0,0,549,551,5,138,0,0,550,
		552,5,7,0,0,551,550,1,0,0,0,551,552,1,0,0,0,552,63,1,0,0,0,553,563,3,66,
		33,0,554,563,3,68,34,0,555,563,3,70,35,0,556,563,3,72,36,0,557,563,3,74,
		37,0,558,563,3,76,38,0,559,563,3,78,39,0,560,563,3,80,40,0,561,563,3,82,
		41,0,562,553,1,0,0,0,562,554,1,0,0,0,562,555,1,0,0,0,562,556,1,0,0,0,562,
		557,1,0,0,0,562,558,1,0,0,0,562,559,1,0,0,0,562,560,1,0,0,0,562,561,1,
		0,0,0,563,65,1,0,0,0,564,565,5,37,0,0,565,567,5,140,0,0,566,568,5,7,0,
		0,567,566,1,0,0,0,567,568,1,0,0,0,568,67,1,0,0,0,569,570,5,38,0,0,570,
		571,5,140,0,0,571,572,5,7,0,0,572,573,5,140,0,0,573,574,5,7,0,0,574,575,
		5,140,0,0,575,576,5,7,0,0,576,577,5,140,0,0,577,579,5,18,0,0,578,580,5,
		7,0,0,579,578,1,0,0,0,579,580,1,0,0,0,580,69,1,0,0,0,581,582,5,39,0,0,
		582,584,5,140,0,0,583,585,5,7,0,0,584,583,1,0,0,0,584,585,1,0,0,0,585,
		71,1,0,0,0,586,587,5,40,0,0,587,589,5,140,0,0,588,590,5,7,0,0,589,588,
		1,0,0,0,589,590,1,0,0,0,590,73,1,0,0,0,591,592,5,41,0,0,592,593,5,140,
		0,0,593,594,5,7,0,0,594,595,5,140,0,0,595,596,5,7,0,0,596,597,5,140,0,
		0,597,599,5,18,0,0,598,600,5,7,0,0,599,598,1,0,0,0,599,600,1,0,0,0,600,
		75,1,0,0,0,601,602,5,42,0,0,602,604,5,138,0,0,603,605,5,7,0,0,604,603,
		1,0,0,0,604,605,1,0,0,0,605,77,1,0,0,0,606,607,5,43,0,0,607,609,5,138,
		0,0,608,610,5,7,0,0,609,608,1,0,0,0,609,610,1,0,0,0,610,79,1,0,0,0,611,
		612,5,44,0,0,612,613,5,140,0,0,613,614,5,7,0,0,614,615,5,140,0,0,615,616,
		5,7,0,0,616,617,5,140,0,0,617,619,5,18,0,0,618,620,5,7,0,0,619,618,1,0,
		0,0,619,620,1,0,0,0,620,81,1,0,0,0,621,622,5,45,0,0,622,624,5,140,0,0,
		623,625,5,7,0,0,624,623,1,0,0,0,624,625,1,0,0,0,625,83,1,0,0,0,626,637,
		3,86,43,0,627,637,3,88,44,0,628,637,3,90,45,0,629,637,3,92,46,0,630,637,
		3,94,47,0,631,637,3,96,48,0,632,637,3,98,49,0,633,637,3,100,50,0,634,637,
		3,102,51,0,635,637,3,104,52,0,636,626,1,0,0,0,636,627,1,0,0,0,636,628,
		1,0,0,0,636,629,1,0,0,0,636,630,1,0,0,0,636,631,1,0,0,0,636,632,1,0,0,
		0,636,633,1,0,0,0,636,634,1,0,0,0,636,635,1,0,0,0,637,85,1,0,0,0,638,639,
		5,46,0,0,639,641,5,138,0,0,640,642,5,7,0,0,641,640,1,0,0,0,641,642,1,0,
		0,0,642,87,1,0,0,0,643,644,5,47,0,0,644,646,5,138,0,0,645,647,5,7,0,0,
		646,645,1,0,0,0,646,647,1,0,0,0,647,89,1,0,0,0,648,649,5,48,0,0,649,651,
		5,138,0,0,650,652,5,7,0,0,651,650,1,0,0,0,651,652,1,0,0,0,652,91,1,0,0,
		0,653,654,5,49,0,0,654,656,5,138,0,0,655,657,5,7,0,0,656,655,1,0,0,0,656,
		657,1,0,0,0,657,93,1,0,0,0,658,659,5,50,0,0,659,661,5,139,0,0,660,662,
		5,7,0,0,661,660,1,0,0,0,661,662,1,0,0,0,662,95,1,0,0,0,663,664,5,51,0,
		0,664,666,5,139,0,0,665,667,5,7,0,0,666,665,1,0,0,0,666,667,1,0,0,0,667,
		97,1,0,0,0,668,669,5,52,0,0,669,671,5,139,0,0,670,672,5,7,0,0,671,670,
		1,0,0,0,671,672,1,0,0,0,672,99,1,0,0,0,673,674,5,53,0,0,674,676,5,141,
		0,0,675,677,5,7,0,0,676,675,1,0,0,0,676,677,1,0,0,0,677,101,1,0,0,0,678,
		679,5,54,0,0,679,681,5,141,0,0,680,682,5,7,0,0,681,680,1,0,0,0,681,682,
		1,0,0,0,682,103,1,0,0,0,683,684,5,55,0,0,684,691,3,106,53,0,685,686,3,
		108,54,0,686,688,5,2,0,0,687,689,5,7,0,0,688,687,1,0,0,0,688,689,1,0,0,
		0,689,691,1,0,0,0,690,683,1,0,0,0,690,685,1,0,0,0,691,105,1,0,0,0,692,
		693,5,9,0,0,693,695,5,142,0,0,694,696,5,7,0,0,695,694,1,0,0,0,695,696,
		1,0,0,0,696,107,1,0,0,0,697,698,5,56,0,0,698,703,3,110,55,0,699,701,5,
		7,0,0,700,702,3,110,55,0,701,700,1,0,0,0,701,702,1,0,0,0,702,704,1,0,0,
		0,703,699,1,0,0,0,703,704,1,0,0,0,704,705,1,0,0,0,705,707,5,2,0,0,706,
		708,5,7,0,0,707,706,1,0,0,0,707,708,1,0,0,0,708,109,1,0,0,0,709,710,3,
		112,56,0,710,711,5,27,0,0,711,712,3,114,57,0,712,111,1,0,0,0,713,714,5,
		142,0,0,714,113,1,0,0,0,715,716,5,142,0,0,716,115,1,0,0,0,717,722,3,118,
		59,0,718,722,3,120,60,0,719,722,3,122,61,0,720,722,3,124,62,0,721,717,
		1,0,0,0,721,718,1,0,0,0,721,719,1,0,0,0,721,720,1,0,0,0,722,117,1,0,0,
		0,723,724,5,57,0,0,724,726,5,140,0,0,725,727,5,7,0,0,726,725,1,0,0,0,726,
		727,1,0,0,0,727,119,1,0,0,0,728,729,5,58,0,0,729,731,5,140,0,0,730,732,
		5,7,0,0,731,730,1,0,0,0,731,732,1,0,0,0,732,121,1,0,0,0,733,734,5,59,0,
		0,734,736,5,140,0,0,735,737,5,7,0,0,736,735,1,0,0,0,736,737,1,0,0,0,737,
		123,1,0,0,0,738,739,5,60,0,0,739,740,5,140,0,0,740,741,5,7,0,0,741,742,
		5,140,0,0,742,743,5,7,0,0,743,744,5,140,0,0,744,745,5,7,0,0,745,746,5,
		140,0,0,746,748,5,18,0,0,747,749,5,7,0,0,748,747,1,0,0,0,748,749,1,0,0,
		0,749,125,1,0,0,0,750,757,3,128,64,0,751,757,3,130,65,0,752,757,3,132,
		66,0,753,757,3,134,67,0,754,757,3,136,68,0,755,757,3,138,69,0,756,750,
		1,0,0,0,756,751,1,0,0,0,756,752,1,0,0,0,756,753,1,0,0,0,756,754,1,0,0,
		0,756,755,1,0,0,0,757,127,1,0,0,0,758,759,5,61,0,0,759,761,5,138,0,0,760,
		762,5,7,0,0,761,760,1,0,0,0,761,762,1,0,0,0,762,129,1,0,0,0,763,764,5,
		62,0,0,764,766,5,138,0,0,765,767,5,7,0,0,766,765,1,0,0,0,766,767,1,0,0,
		0,767,131,1,0,0,0,768,769,5,63,0,0,769,771,5,138,0,0,770,772,5,7,0,0,771,
		770,1,0,0,0,771,772,1,0,0,0,772,133,1,0,0,0,773,774,5,64,0,0,774,775,5,
		140,0,0,775,776,5,7,0,0,776,777,5,140,0,0,777,778,5,7,0,0,778,779,5,140,
		0,0,779,781,5,18,0,0,780,782,5,7,0,0,781,780,1,0,0,0,781,782,1,0,0,0,782,
		135,1,0,0,0,783,784,5,65,0,0,784,786,5,140,0,0,785,787,5,7,0,0,786,785,
		1,0,0,0,786,787,1,0,0,0,787,137,1,0,0,0,788,789,5,66,0,0,789,791,5,140,
		0,0,790,792,5,7,0,0,791,790,1,0,0,0,791,792,1,0,0,0,792,139,1,0,0,0,793,
		799,3,142,71,0,794,799,3,144,72,0,795,799,3,146,73,0,796,799,3,148,74,
		0,797,799,3,150,75,0,798,793,1,0,0,0,798,794,1,0,0,0,798,795,1,0,0,0,798,
		796,1,0,0,0,798,797,1,0,0,0,799,141,1,0,0,0,800,801,5,67,0,0,801,803,5,
		138,0,0,802,804,5,7,0,0,803,802,1,0,0,0,803,804,1,0,0,0,804,143,1,0,0,
		0,805,806,5,68,0,0,806,808,5,138,0,0,807,809,5,7,0,0,808,807,1,0,0,0,808,
		809,1,0,0,0,809,145,1,0,0,0,810,811,5,69,0,0,811,812,5,140,0,0,812,813,
		5,7,0,0,813,814,5,140,0,0,814,815,5,7,0,0,815,816,5,140,0,0,816,817,5,
		7,0,0,817,818,5,140,0,0,818,820,5,18,0,0,819,821,5,7,0,0,820,819,1,0,0,
		0,820,821,1,0,0,0,821,147,1,0,0,0,822,823,5,70,0,0,823,825,5,138,0,0,824,
		826,5,7,0,0,825,824,1,0,0,0,825,826,1,0,0,0,826,149,1,0,0,0,827,828,5,
		71,0,0,828,830,5,140,0,0,829,831,5,7,0,0,830,829,1,0,0,0,830,831,1,0,0,
		0,831,151,1,0,0,0,832,837,3,154,77,0,833,837,3,156,78,0,834,837,3,158,
		79,0,835,837,3,160,80,0,836,832,1,0,0,0,836,833,1,0,0,0,836,834,1,0,0,
		0,836,835,1,0,0,0,837,153,1,0,0,0,838,839,5,72,0,0,839,841,5,138,0,0,840,
		842,5,7,0,0,841,840,1,0,0,0,841,842,1,0,0,0,842,155,1,0,0,0,843,844,5,
		73,0,0,844,846,5,140,0,0,845,847,5,7,0,0,846,845,1,0,0,0,846,847,1,0,0,
		0,847,157,1,0,0,0,848,849,5,74,0,0,849,851,5,140,0,0,850,852,5,7,0,0,851,
		850,1,0,0,0,851,852,1,0,0,0,852,159,1,0,0,0,853,854,5,75,0,0,854,856,5,
		138,0,0,855,857,5,7,0,0,856,855,1,0,0,0,856,857,1,0,0,0,857,161,1,0,0,
		0,858,862,3,164,82,0,859,862,3,166,83,0,860,862,3,168,84,0,861,858,1,0,
		0,0,861,859,1,0,0,0,861,860,1,0,0,0,862,163,1,0,0,0,863,864,5,76,0,0,864,
		866,5,142,0,0,865,867,5,7,0,0,866,865,1,0,0,0,866,867,1,0,0,0,867,165,
		1,0,0,0,868,869,5,77,0,0,869,871,5,141,0,0,870,872,5,7,0,0,871,870,1,0,
		0,0,871,872,1,0,0,0,872,167,1,0,0,0,873,874,5,78,0,0,874,879,3,4,2,0,875,
		877,5,7,0,0,876,878,3,4,2,0,877,876,1,0,0,0,877,878,1,0,0,0,878,880,1,
		0,0,0,879,875,1,0,0,0,879,880,1,0,0,0,880,881,1,0,0,0,881,883,5,18,0,0,
		882,884,5,7,0,0,883,882,1,0,0,0,883,884,1,0,0,0,884,169,1,0,0,0,885,903,
		3,172,86,0,886,903,3,174,87,0,887,903,3,176,88,0,888,903,3,178,89,0,889,
		903,3,180,90,0,890,903,3,182,91,0,891,903,3,184,92,0,892,903,3,186,93,
		0,893,903,3,188,94,0,894,903,3,190,95,0,895,903,3,192,96,0,896,903,3,194,
		97,0,897,903,3,196,98,0,898,903,3,198,99,0,899,903,3,200,100,0,900,903,
		3,28,14,0,901,903,3,202,101,0,902,885,1,0,0,0,902,886,1,0,0,0,902,887,
		1,0,0,0,902,888,1,0,0,0,902,889,1,0,0,0,902,890,1,0,0,0,902,891,1,0,0,
		0,902,892,1,0,0,0,902,893,1,0,0,0,902,894,1,0,0,0,902,895,1,0,0,0,902,
		896,1,0,0,0,902,897,1,0,0,0,902,898,1,0,0,0,902,899,1,0,0,0,902,900,1,
		0,0,0,902,901,1,0,0,0,903,171,1,0,0,0,904,905,5,79,0,0,905,907,5,141,0,
		0,906,908,5,7,0,0,907,906,1,0,0,0,907,908,1,0,0,0,908,173,1,0,0,0,909,
		910,5,80,0,0,910,912,5,142,0,0,911,913,5,7,0,0,912,911,1,0,0,0,912,913,
		1,0,0,0,913,175,1,0,0,0,914,915,5,81,0,0,915,917,5,138,0,0,916,918,5,7,
		0,0,917,916,1,0,0,0,917,918,1,0,0,0,918,177,1,0,0,0,919,920,5,82,0,0,920,
		922,5,141,0,0,921,923,5,7,0,0,922,921,1,0,0,0,922,923,1,0,0,0,923,179,
		1,0,0,0,924,925,5,83,0,0,925,927,5,141,0,0,926,928,5,7,0,0,927,926,1,0,
		0,0,927,928,1,0,0,0,928,181,1,0,0,0,929,930,5,84,0,0,930,932,5,138,0,0,
		931,933,5,7,0,0,932,931,1,0,0,0,932,933,1,0,0,0,933,183,1,0,0,0,934,935,
		5,85,0,0,935,937,5,138,0,0,936,938,5,7,0,0,937,936,1,0,0,0,937,938,1,0,
		0,0,938,185,1,0,0,0,939,940,5,86,0,0,940,942,5,138,0,0,941,943,5,7,0,0,
		942,941,1,0,0,0,942,943,1,0,0,0,943,187,1,0,0,0,944,945,5,87,0,0,945,946,
		5,141,0,0,946,947,5,7,0,0,947,948,5,141,0,0,948,949,5,7,0,0,949,950,5,
		141,0,0,950,952,5,18,0,0,951,953,5,7,0,0,952,951,1,0,0,0,952,953,1,0,0,
		0,953,189,1,0,0,0,954,955,5,88,0,0,955,957,5,138,0,0,956,958,5,7,0,0,957,
		956,1,0,0,0,957,958,1,0,0,0,958,191,1,0,0,0,959,960,5,89,0,0,960,962,5,
		140,0,0,961,963,5,7,0,0,962,961,1,0,0,0,962,963,1,0,0,0,963,193,1,0,0,
		0,964,965,5,90,0,0,965,966,5,141,0,0,966,967,5,7,0,0,967,968,5,141,0,0,
		968,970,5,18,0,0,969,971,5,7,0,0,970,969,1,0,0,0,970,971,1,0,0,0,971,195,
		1,0,0,0,972,973,5,91,0,0,973,975,5,138,0,0,974,976,5,7,0,0,975,974,1,0,
		0,0,975,976,1,0,0,0,976,197,1,0,0,0,977,978,5,92,0,0,978,983,3,0,0,0,979,
		981,5,7,0,0,980,982,3,0,0,0,981,980,1,0,0,0,981,982,1,0,0,0,982,984,1,
		0,0,0,983,979,1,0,0,0,983,984,1,0,0,0,984,985,1,0,0,0,985,987,5,18,0,0,
		986,988,5,7,0,0,987,986,1,0,0,0,987,988,1,0,0,0,988,199,1,0,0,0,989,990,
		5,93,0,0,990,992,5,140,0,0,991,993,5,7,0,0,992,991,1,0,0,0,992,993,1,0,
		0,0,993,201,1,0,0,0,994,995,5,94,0,0,995,997,5,18,0,0,996,998,5,7,0,0,
		997,996,1,0,0,0,997,998,1,0,0,0,998,203,1,0,0,0,999,1000,5,1,0,0,1000,
		1002,3,8,4,0,1001,1003,5,7,0,0,1002,1001,1,0,0,0,1002,1003,1,0,0,0,1003,
		1015,1,0,0,0,1004,1016,3,64,32,0,1005,1016,3,84,42,0,1006,1016,3,116,58,
		0,1007,1016,3,126,63,0,1008,1016,3,140,70,0,1009,1016,3,152,76,0,1010,
		1016,3,162,81,0,1011,1016,3,170,85,0,1012,1016,3,206,103,0,1013,1016,3,
		210,105,0,1014,1016,1,0,0,0,1015,1004,1,0,0,0,1015,1005,1,0,0,0,1015,1006,
		1,0,0,0,1015,1007,1,0,0,0,1015,1008,1,0,0,0,1015,1009,1,0,0,0,1015,1010,
		1,0,0,0,1015,1011,1,0,0,0,1015,1012,1,0,0,0,1015,1013,1,0,0,0,1015,1014,
		1,0,0,0,1016,1017,1,0,0,0,1017,1018,5,2,0,0,1018,205,1,0,0,0,1019,1020,
		3,208,104,0,1020,207,1,0,0,0,1021,1022,5,95,0,0,1022,1023,5,141,0,0,1023,
		1024,5,7,0,0,1024,1025,5,141,0,0,1025,1026,5,7,0,0,1026,1027,5,141,0,0,
		1027,1029,5,18,0,0,1028,1030,5,7,0,0,1029,1028,1,0,0,0,1029,1030,1,0,0,
		0,1030,209,1,0,0,0,1031,1032,3,212,106,0,1032,211,1,0,0,0,1033,1034,5,
		78,0,0,1034,1039,3,4,2,0,1035,1037,5,7,0,0,1036,1038,3,4,2,0,1037,1036,
		1,0,0,0,1037,1038,1,0,0,0,1038,1040,1,0,0,0,1039,1035,1,0,0,0,1039,1040,
		1,0,0,0,1040,1041,1,0,0,0,1041,1043,5,18,0,0,1042,1044,5,7,0,0,1043,1042,
		1,0,0,0,1043,1044,1,0,0,0,1044,213,1,0,0,0,1045,1057,3,216,108,0,1046,
		1057,3,218,109,0,1047,1057,3,220,110,0,1048,1057,3,222,111,0,1049,1057,
		3,224,112,0,1050,1057,3,226,113,0,1051,1057,3,228,114,0,1052,1057,3,230,
		115,0,1053,1057,3,232,116,0,1054,1057,3,234,117,0,1055,1057,3,252,126,
		0,1056,1045,1,0,0,0,1056,1046,1,0,0,0,1056,1047,1,0,0,0,1056,1048,1,0,
		0,0,1056,1049,1,0,0,0,1056,1050,1,0,0,0,1056,1051,1,0,0,0,1056,1052,1,
		0,0,0,1056,1053,1,0,0,0,1056,1054,1,0,0,0,1056,1055,1,0,0,0,1057,215,1,
		0,0,0,1058,1059,5,96,0,0,1059,1061,5,141,0,0,1060,1062,5,7,0,0,1061,1060,
		1,0,0,0,1061,1062,1,0,0,0,1062,217,1,0,0,0,1063,1064,5,97,0,0,1064,1066,
		5,141,0,0,1065,1067,5,7,0,0,1066,1065,1,0,0,0,1066,1067,1,0,0,0,1067,219,
		1,0,0,0,1068,1069,5,98,0,0,1069,1071,5,138,0,0,1070,1072,5,7,0,0,1071,
		1070,1,0,0,0,1071,1072,1,0,0,0,1072,221,1,0,0,0,1073,1074,5,99,0,0,1074,
		1076,5,141,0,0,1075,1077,5,7,0,0,1076,1075,1,0,0,0,1076,1077,1,0,0,0,1077,
		223,1,0,0,0,1078,1079,5,100,0,0,1079,1081,5,140,0,0,1080,1082,5,7,0,0,
		1081,1080,1,0,0,0,1081,1082,1,0,0,0,1082,225,1,0,0,0,1083,1084,5,101,0,
		0,1084,1086,5,141,0,0,1085,1087,5,7,0,0,1086,1085,1,0,0,0,1086,1087,1,
		0,0,0,1087,227,1,0,0,0,1088,1089,5,102,0,0,1089,1091,5,140,0,0,1090,1092,
		5,7,0,0,1091,1090,1,0,0,0,1091,1092,1,0,0,0,1092,229,1,0,0,0,1093,1094,
		5,103,0,0,1094,1096,5,140,0,0,1095,1097,5,7,0,0,1096,1095,1,0,0,0,1096,
		1097,1,0,0,0,1097,231,1,0,0,0,1098,1099,5,104,0,0,1099,1101,5,140,0,0,
		1100,1102,5,7,0,0,1101,1100,1,0,0,0,1101,1102,1,0,0,0,1102,233,1,0,0,0,
		1103,1104,5,105,0,0,1104,1109,3,236,118,0,1105,1107,5,7,0,0,1106,1108,
		3,236,118,0,1107,1106,1,0,0,0,1107,1108,1,0,0,0,1108,1110,1,0,0,0,1109,
		1105,1,0,0,0,1109,1110,1,0,0,0,1110,1111,1,0,0,0,1111,1113,5,18,0,0,1112,
		1114,5,7,0,0,1113,1112,1,0,0,0,1113,1114,1,0,0,0,1114,235,1,0,0,0,1115,
		1116,5,1,0,0,1116,1122,3,238,119,0,1117,1122,3,240,120,0,1118,1119,3,250,
		125,0,1119,1120,5,2,0,0,1120,1122,1,0,0,0,1121,1115,1,0,0,0,1121,1117,
		1,0,0,0,1121,1118,1,0,0,0,1122,237,1,0,0,0,1123,1124,5,106,0,0,1124,1126,
		5,141,0,0,1125,1127,5,7,0,0,1126,1125,1,0,0,0,1126,1127,1,0,0,0,1127,239,
		1,0,0,0,1128,1129,5,107,0,0,1129,1134,3,242,121,0,1130,1132,5,7,0,0,1131,
		1133,3,242,121,0,1132,1131,1,0,0,0,1132,1133,1,0,0,0,1133,1135,1,0,0,0,
		1134,1130,1,0,0,0,1134,1135,1,0,0,0,1135,1136,1,0,0,0,1136,1137,5,18,0,
		0,1137,241,1,0,0,0,1138,1143,3,244,122,0,1139,1143,3,246,123,0,1140,1143,
		3,248,124,0,1141,1143,3,28,14,0,1142,1138,1,0,0,0,1142,1139,1,0,0,0,1142,
		1140,1,0,0,0,1142,1141,1,0,0,0,1143,243,1,0,0,0,1144,1145,5,108,0,0,1145,
		1147,5,141,0,0,1146,1148,5,7,0,0,1147,1146,1,0,0,0,1147,1148,1,0,0,0,1148,
		245,1,0,0,0,1149,1150,5,9,0,0,1150,1152,5,142,0,0,1151,1153,5,7,0,0,1152,
		1151,1,0,0,0,1152,1153,1,0,0,0,1153,247,1,0,0,0,1154,1155,5,10,0,0,1155,
		1157,5,140,0,0,1156,1158,5,7,0,0,1157,1156,1,0,0,0,1157,1158,1,0,0,0,1158,
		249,1,0,0,0,1159,1160,5,9,0,0,1160,1162,5,142,0,0,1161,1163,5,7,0,0,1162,
		1161,1,0,0,0,1162,1163,1,0,0,0,1163,251,1,0,0,0,1164,1165,5,109,0,0,1165,
		1170,3,254,127,0,1166,1168,5,7,0,0,1167,1169,3,254,127,0,1168,1167,1,0,
		0,0,1168,1169,1,0,0,0,1169,1171,1,0,0,0,1170,1166,1,0,0,0,1170,1171,1,
		0,0,0,1171,1172,1,0,0,0,1172,1174,5,18,0,0,1173,1175,5,7,0,0,1174,1173,
		1,0,0,0,1174,1175,1,0,0,0,1175,253,1,0,0,0,1176,1184,3,256,128,0,1177,
		1184,3,258,129,0,1178,1184,3,260,130,0,1179,1184,3,262,131,0,1180,1184,
		3,8,4,0,1181,1184,3,278,139,0,1182,1184,3,280,140,0,1183,1176,1,0,0,0,
		1183,1177,1,0,0,0,1183,1178,1,0,0,0,1183,1179,1,0,0,0,1183,1180,1,0,0,
		0,1183,1181,1,0,0,0,1183,1182,1,0,0,0,1184,255,1,0,0,0,1185,1186,5,110,
		0,0,1186,1188,5,138,0,0,1187,1189,5,7,0,0,1188,1187,1,0,0,0,1188,1189,
		1,0,0,0,1189,257,1,0,0,0,1190,1191,5,111,0,0,1191,1193,5,139,0,0,1192,
		1194,5,7,0,0,1193,1192,1,0,0,0,1193,1194,1,0,0,0,1194,259,1,0,0,0,1195,
		1196,5,112,0,0,1196,1198,5,140,0,0,1197,1199,5,7,0,0,1198,1197,1,0,0,0,
		1198,1199,1,0,0,0,1199,261,1,0,0,0,1200,1208,3,264,132,0,1201,1208,3,266,
		133,0,1202,1208,3,268,134,0,1203,1208,3,270,135,0,1204,1208,3,272,136,
		0,1205,1208,3,274,137,0,1206,1208,3,276,138,0,1207,1200,1,0,0,0,1207,1201,
		1,0,0,0,1207,1202,1,0,0,0,1207,1203,1,0,0,0,1207,1204,1,0,0,0,1207,1205,
		1,0,0,0,1207,1206,1,0,0,0,1208,263,1,0,0,0,1209,1210,5,113,0,0,1210,1212,
		5,140,0,0,1211,1213,5,7,0,0,1212,1211,1,0,0,0,1212,1213,1,0,0,0,1213,265,
		1,0,0,0,1214,1215,5,114,0,0,1215,1217,5,141,0,0,1216,1218,5,7,0,0,1217,
		1216,1,0,0,0,1217,1218,1,0,0,0,1218,267,1,0,0,0,1219,1220,5,115,0,0,1220,
		1222,5,141,0,0,1221,1223,5,7,0,0,1222,1221,1,0,0,0,1222,1223,1,0,0,0,1223,
		269,1,0,0,0,1224,1225,5,116,0,0,1225,1227,5,141,0,0,1226,1228,5,7,0,0,
		1227,1226,1,0,0,0,1227,1228,1,0,0,0,1228,271,1,0,0,0,1229,1230,5,117,0,
		0,1230,1232,5,141,0,0,1231,1233,5,7,0,0,1232,1231,1,0,0,0,1232,1233,1,
		0,0,0,1233,273,1,0,0,0,1234,1235,5,118,0,0,1235,1237,5,138,0,0,1236,1238,
		5,7,0,0,1237,1236,1,0,0,0,1237,1238,1,0,0,0,1238,275,1,0,0,0,1239,1240,
		5,119,0,0,1240,1242,5,140,0,0,1241,1243,5,7,0,0,1242,1241,1,0,0,0,1242,
		1243,1,0,0,0,1243,277,1,0,0,0,1244,1245,5,120,0,0,1245,1247,5,138,0,0,
		1246,1248,5,7,0,0,1247,1246,1,0,0,0,1247,1248,1,0,0,0,1248,279,1,0,0,0,
		1249,1250,5,121,0,0,1250,1252,5,138,0,0,1251,1253,5,7,0,0,1252,1251,1,
		0,0,0,1252,1253,1,0,0,0,1253,281,1,0,0,0,1254,1258,3,284,142,0,1255,1258,
		3,286,143,0,1256,1258,3,288,144,0,1257,1254,1,0,0,0,1257,1255,1,0,0,0,
		1257,1256,1,0,0,0,1258,283,1,0,0,0,1259,1260,5,122,0,0,1260,1262,5,138,
		0,0,1261,1263,5,7,0,0,1262,1261,1,0,0,0,1262,1263,1,0,0,0,1263,285,1,0,
		0,0,1264,1265,5,123,0,0,1265,1267,5,140,0,0,1266,1268,5,7,0,0,1267,1266,
		1,0,0,0,1267,1268,1,0,0,0,1268,287,1,0,0,0,1269,1270,5,124,0,0,1270,1277,
		3,106,53,0,1271,1272,3,108,54,0,1272,1274,5,2,0,0,1273,1275,5,7,0,0,1274,
		1273,1,0,0,0,1274,1275,1,0,0,0,1275,1277,1,0,0,0,1276,1269,1,0,0,0,1276,
		1271,1,0,0,0,1277,289,1,0,0,0,1278,1290,3,292,146,0,1279,1290,3,294,147,
		0,1280,1290,3,296,148,0,1281,1290,3,298,149,0,1282,1290,3,300,150,0,1283,
		1290,3,302,151,0,1284,1290,3,304,152,0,1285,1290,3,306,153,0,1286,1290,
		3,308,154,0,1287,1290,3,310,155,0,1288,1290,3,312,156,0,1289,1278,1,0,
		0,0,1289,1279,1,0,0,0,1289,1280,1,0,0,0,1289,1281,1,0,0,0,1289,1282,1,
		0,0,0,1289,1283,1,0,0,0,1289,1284,1,0,0,0,1289,1285,1,0,0,0,1289,1286,
		1,0,0,0,1289,1287,1,0,0,0,1289,1288,1,0,0,0,1290,291,1,0,0,0,1291,1292,
		5,125,0,0,1292,1294,5,138,0,0,1293,1295,5,7,0,0,1294,1293,1,0,0,0,1294,
		1295,1,0,0,0,1295,293,1,0,0,0,1296,1297,5,126,0,0,1297,1299,5,142,0,0,
		1298,1300,5,7,0,0,1299,1298,1,0,0,0,1299,1300,1,0,0,0,1300,295,1,0,0,0,
		1301,1302,5,127,0,0,1302,1304,5,141,0,0,1303,1305,5,7,0,0,1304,1303,1,
		0,0,0,1304,1305,1,0,0,0,1305,297,1,0,0,0,1306,1307,5,128,0,0,1307,1309,
		5,138,0,0,1308,1310,5,7,0,0,1309,1308,1,0,0,0,1309,1310,1,0,0,0,1310,299,
		1,0,0,0,1311,1312,5,129,0,0,1312,1314,5,138,0,0,1313,1315,5,7,0,0,1314,
		1313,1,0,0,0,1314,1315,1,0,0,0,1315,301,1,0,0,0,1316,1317,5,130,0,0,1317,
		1319,5,138,0,0,1318,1320,5,7,0,0,1319,1318,1,0,0,0,1319,1320,1,0,0,0,1320,
		303,1,0,0,0,1321,1322,1,0,0,0,1322,305,1,0,0,0,1323,1324,5,131,0,0,1324,
		1329,3,4,2,0,1325,1327,5,7,0,0,1326,1328,3,4,2,0,1327,1326,1,0,0,0,1327,
		1328,1,0,0,0,1328,1330,1,0,0,0,1329,1325,1,0,0,0,1329,1330,1,0,0,0,1330,
		1331,1,0,0,0,1331,1333,5,18,0,0,1332,1334,5,7,0,0,1333,1332,1,0,0,0,1333,
		1334,1,0,0,0,1334,307,1,0,0,0,1335,1336,5,132,0,0,1336,1337,5,141,0,0,
		1337,1338,5,7,0,0,1338,1339,5,141,0,0,1339,1340,5,7,0,0,1340,1341,5,141,
		0,0,1341,1342,5,7,0,0,1342,1343,5,141,0,0,1343,1345,5,18,0,0,1344,1346,
		5,7,0,0,1345,1344,1,0,0,0,1345,1346,1,0,0,0,1346,309,1,0,0,0,1347,1348,
		5,133,0,0,1348,1353,3,4,2,0,1349,1351,5,7,0,0,1350,1352,3,4,2,0,1351,1350,
		1,0,0,0,1351,1352,1,0,0,0,1352,1354,1,0,0,0,1353,1349,1,0,0,0,1353,1354,
		1,0,0,0,1354,1355,1,0,0,0,1355,1357,5,18,0,0,1356,1358,5,7,0,0,1357,1356,
		1,0,0,0,1357,1358,1,0,0,0,1358,311,1,0,0,0,1359,1360,5,134,0,0,1360,1361,
		5,141,0,0,1361,1362,5,7,0,0,1362,1363,5,141,0,0,1363,1364,5,7,0,0,1364,
		1365,5,141,0,0,1365,1366,5,7,0,0,1366,1367,5,141,0,0,1367,1369,5,18,0,
		0,1368,1370,5,7,0,0,1369,1368,1,0,0,0,1369,1370,1,0,0,0,1370,313,1,0,0,
		0,1371,1375,3,316,158,0,1372,1375,3,318,159,0,1373,1375,3,146,73,0,1374,
		1371,1,0,0,0,1374,1372,1,0,0,0,1374,1373,1,0,0,0,1375,315,1,0,0,0,1376,
		1377,5,135,0,0,1377,1379,5,138,0,0,1378,1380,5,7,0,0,1379,1378,1,0,0,0,
		1379,1380,1,0,0,0,1380,317,1,0,0,0,1381,1382,5,136,0,0,1382,1384,5,138,
		0,0,1383,1385,5,7,0,0,1384,1383,1,0,0,0,1384,1385,1,0,0,0,1385,319,1,0,
		0,0,1386,1389,3,146,73,0,1387,1389,3,322,161,0,1388,1386,1,0,0,0,1388,
		1387,1,0,0,0,1389,321,1,0,0,0,1390,1391,5,137,0,0,1391,1393,5,138,0,0,
		1392,1394,5,7,0,0,1393,1392,1,0,0,0,1393,1394,1,0,0,0,1394,323,1,0,0,0,
		182,342,349,373,383,388,393,398,403,408,420,425,429,434,438,443,448,452,
		455,458,462,467,474,478,481,485,497,499,503,508,512,516,518,527,532,536,
		541,546,551,562,567,579,584,589,599,604,609,619,624,636,641,646,651,656,
		661,666,671,676,681,688,690,695,701,703,707,721,726,731,736,748,756,761,
		766,771,781,786,791,798,803,808,820,825,830,836,841,846,851,856,861,866,
		871,877,879,883,902,907,912,917,922,927,932,937,942,952,957,962,970,975,
		981,983,987,992,997,1002,1015,1029,1037,1039,1043,1056,1061,1066,1071,
		1076,1081,1086,1091,1096,1101,1107,1109,1113,1121,1126,1132,1134,1142,
		1147,1152,1157,1162,1168,1170,1174,1183,1188,1193,1198,1207,1212,1217,
		1222,1227,1232,1237,1242,1247,1252,1257,1262,1267,1274,1276,1289,1294,
		1299,1304,1309,1314,1319,1327,1329,1333,1345,1351,1353,1357,1369,1374,
		1379,1384,1388,1393
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
